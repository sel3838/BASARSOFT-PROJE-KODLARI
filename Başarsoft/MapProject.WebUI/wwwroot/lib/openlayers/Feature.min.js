import BaseObject from"./Object.js";import EventType from"./events/EventType.js";import{assert}from"./asserts.js";import{listen,unlistenByKey}from"./events.js";class Feature extends BaseObject{constructor(e){super(),this.on,this.once,this.un,this.id_=void 0,this.geometryName_="geometry",this.style_=null,this.styleFunction_=void 0,this.geometryChangeKey_=null,this.addChangeListener(this.geometryName_,this.handleGeometryChanged_),e&&("function"==typeof e.getSimplifiedGeometry?this.setGeometry(e):this.setProperties(e))}clone(){const e=new Feature(this.hasProperties()?this.getProperties():null),t=(e.setGeometryName(this.getGeometryName()),this.getGeometry());t&&e.setGeometry(t.clone());var s=this.getStyle();return s&&e.setStyle(s),e}getGeometry(){return this.get(this.geometryName_)}getId(){return this.id_}getGeometryName(){return this.geometryName_}getStyle(){return this.style_}getStyleFunction(){return this.styleFunction_}handleGeometryChange_(){this.changed()}handleGeometryChanged_(){this.geometryChangeKey_&&(unlistenByKey(this.geometryChangeKey_),this.geometryChangeKey_=null);var e=this.getGeometry();e&&(this.geometryChangeKey_=listen(e,EventType.CHANGE,this.handleGeometryChange_,this)),this.changed()}setGeometry(e){this.set(this.geometryName_,e)}setStyle(e){this.style_=e,this.styleFunction_=e?createStyleFunction(e):void 0,this.changed()}setId(e){this.id_=e,this.changed()}setGeometryName(e){this.removeChangeListener(this.geometryName_,this.handleGeometryChanged_),this.geometryName_=e,this.addChangeListener(this.geometryName_,this.handleGeometryChanged_),this.handleGeometryChanged_()}}function createStyleFunction(e){if("function"==typeof e)return e;let t;return t=Array.isArray(e)?e:(assert("function"==typeof e.getZIndex,"Expected an `ol/style/Style` or an array of `ol/style/Style.js`"),[e]),function(){return t}}export default Feature;export{createStyleFunction};