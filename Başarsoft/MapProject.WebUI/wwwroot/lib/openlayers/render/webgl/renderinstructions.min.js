import{apply as applyTransform}from"../../transform.js";import{transform2D}from"../../geom/flat/transform.js";function pushCustomAttributesInRenderInstructions(t,e,n,r){let s=0;for(const i in e){const u=e[i];var o=u.callback.call(n,n.feature);t[r+s++]=o[0]??o,u.size&&1!==u.size&&(t[r+s++]=o[1],u.size<3||(t[r+s++]=o[2],u.size<4||(t[r+s++]=o[3])))}return s}function getCustomAttributesSize(n){return Object.keys(n).reduce((t,e)=>t+(n[e].size||1),0)}function generatePointRenderInstructions(t,n,r,s){var e=(2+getCustomAttributesSize(r))*t.geometriesCount;n&&n.length===e||(n=new Float32Array(e));const o=[];let i=0;for(const l in t.entries){var u=t.entries[l];for(let t=0,e=u.flatCoordss.length;t<e;t++)o[0]=u.flatCoordss[t][0],o[1]=u.flatCoordss[t][1],applyTransform(s,o),n[i++]=o[0],n[i++]=o[1],i+=pushCustomAttributesInRenderInstructions(n,r,u,i)}return n}function generateLineStringRenderInstructions(t,n,r,s){var e=2*t.verticesCount+(1+getCustomAttributesSize(r))*t.geometriesCount;n&&n.length===e||(n=new Float32Array(e));const o=[];let i=0;for(const l in t.entries){var u=t.entries[l];for(let t=0,e=u.flatCoordss.length;t<e;t++){o.length=u.flatCoordss[t].length,transform2D(u.flatCoordss[t],0,o.length,2,s,o),i+=pushCustomAttributesInRenderInstructions(n,r,u,i),n[i++]=o.length/2;for(let t=0,e=o.length;t<e;t+=2)n[i++]=o[t],n[i++]=o[t+1]}}return n}function generatePolygonRenderInstructions(t,r,e,s){var n=2*t.verticesCount+(1+getCustomAttributesSize(e))*t.geometriesCount+t.ringsCount;r&&r.length===n||(r=new Float32Array(n));const o=[];let i=0;for(const l in t.entries){var u=t.entries[l];for(let n=0,t=u.flatCoordss.length;n<t;n++){o.length=u.flatCoordss[n].length,transform2D(u.flatCoordss[n],0,o.length,2,s,o),i+=pushCustomAttributesInRenderInstructions(r,e,u,i),r[i++]=u.ringsVerticesCounts[n].length;for(let t=0,e=u.ringsVerticesCounts[n].length;t<e;t++)r[i++]=u.ringsVerticesCounts[n][t];for(let t=0,e=o.length;t<e;t+=2)r[i++]=o[t],r[i++]=o[t+1]}}return r}export{getCustomAttributesSize,generatePointRenderInstructions,generateLineStringRenderInstructions,generatePolygonRenderInstructions};