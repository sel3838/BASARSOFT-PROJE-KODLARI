import LRUCache from"./structs/LRUCache.js";import{getIntersection}from"./extent.js";export{default as BingMaps}from"./source/BingMaps.js";export{default as CartoDB}from"./source/CartoDB.js";export{default as Cluster}from"./source/Cluster.js";export{default as DataTile}from"./source/DataTile.js";export{default as GeoTIFF}from"./source/GeoTIFF.js";export{default as Google}from"./source/Google.js";export{default as IIIF}from"./source/IIIF.js";export{default as Image}from"./source/Image.js";export{default as ImageArcGISRest}from"./source/ImageArcGISRest.js";export{default as ImageCanvas}from"./source/ImageCanvas.js";export{default as ImageMapGuide}from"./source/ImageMapGuide.js";export{default as ImageStatic}from"./source/ImageStatic.js";export{default as ImageWMS}from"./source/ImageWMS.js";export{default as OGCMapTile}from"./source/OGCMapTile.js";export{default as OGCVectorTile}from"./source/OGCVectorTile.js";export{default as OSM}from"./source/OSM.js";export{default as Raster}from"./source/Raster.js";export{default as Source}from"./source/Source.js";export{default as StadiaMaps}from"./source/StadiaMaps.js";export{default as Tile}from"./source/Tile.js";export{default as TileArcGISRest}from"./source/TileArcGISRest.js";export{default as TileDebug}from"./source/TileDebug.js";export{default as TileImage}from"./source/TileImage.js";export{default as TileJSON}from"./source/TileJSON.js";export{default as TileWMS}from"./source/TileWMS.js";export{default as UrlTile}from"./source/UrlTile.js";export{default as UTFGrid}from"./source/UTFGrid.js";export{default as Vector}from"./source/Vector.js";export{default as VectorTile}from"./source/VectorTile.js";export{default as WMTS}from"./source/WMTS.js";export{default as XYZ}from"./source/XYZ.js";export{default as Zoomify}from"./source/Zoomify.js";export{createLoader as createWMSLoader}from"./source/wms.js";export{createLoader as createArcGISRestLoader}from"./source/arcgisRest.js";export{createLoader as createStaticLoader}from"./source/static.js";export{createLoader as createMapGuideLoader}from"./source/mapguide.js";function sourcesFromTileGrid(s,a){const t=new LRUCache(32),u=s.getExtent();return function(e,r){t.expireCache(),u&&(e=getIntersection(u,e));r=s.getZForResolution(r);const o=[];return s.forEachTileCoord(e,r,e=>{var r=e.toString();t.containsKey(r)||(e=a(e),t.set(r,e)),o.push(t.get(r))}),o}}export{sourcesFromTileGrid};