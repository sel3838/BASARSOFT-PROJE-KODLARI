import{WORKER_OFFSCREEN_CANVAS}from"./has.js";function createCanvasContext2D(e,t,n,r){let a;return a=n&&n.length?n.shift():WORKER_OFFSCREEN_CANVAS?new OffscreenCanvas(e||300,t||300):document.createElement("canvas"),e&&(a.width=e),t&&(a.height=t),a.getContext("2d",r)}let sharedCanvasContext;function getSharedCanvasContext2D(){return sharedCanvasContext=sharedCanvasContext||createCanvasContext2D(1,1)}function releaseCanvas(e){const t=e.canvas;t.width=1,t.height=1,e.clearRect(0,0,1,1)}function outerWidth(e){var t=e.offsetWidth,e=getComputedStyle(e);return t+=parseInt(e.marginLeft,10)+parseInt(e.marginRight,10)}function outerHeight(e){var t=e.offsetHeight,e=getComputedStyle(e);return t+=parseInt(e.marginTop,10)+parseInt(e.marginBottom,10)}function replaceNode(e,t){const n=t.parentNode;n&&n.replaceChild(e,t)}function removeNode(e){return e&&e.parentNode?e.parentNode.removeChild(e):null}function removeChildren(e){for(;e.lastChild;)e.removeChild(e.lastChild)}function replaceChildren(t,n){var r=t.childNodes;for(let e=0;;++e){1;{var a=r[e],o=n[e];if(!a&&!o)break;a!==o&&(a?o?t.insertBefore(o,a):(t.removeChild(a),--e):t.appendChild(o))}}}export{createCanvasContext2D,getSharedCanvasContext2D,releaseCanvas,outerWidth,outerHeight,replaceNode,removeNode,removeChildren,replaceChildren};