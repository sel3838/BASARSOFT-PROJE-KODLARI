import BaseTileLayer from"./BaseTile.js";import LayerProperty from"../layer/Property.js";import WebGLTileLayerRenderer,{Attributes,Uniforms}from"../renderer/webgl/TileLayer.js";import{ColorType,NumberType}from"../expr/expression.js";import{PALETTE_TEXTURE_ARRAY,getStringNumberEquivalent,newCompilationContext,uniformNameForVariable}from"../expr/gpu.js";import{expressionToGlsl}from"../webgl/styleparser.js";function parseStyle(r,e){var t=`
    attribute vec2 ${Attributes.TEXTURE_COORD};
    uniform mat4 ${Uniforms.TILE_TRANSFORM};
    uniform float ${Uniforms.TEXTURE_PIXEL_WIDTH};
    uniform float ${Uniforms.TEXTURE_PIXEL_HEIGHT};
    uniform float ${Uniforms.TEXTURE_RESOLUTION};
    uniform float ${Uniforms.TEXTURE_ORIGIN_X};
    uniform float ${Uniforms.TEXTURE_ORIGIN_Y};
    uniform float ${Uniforms.DEPTH};

    varying vec2 v_textureCoord;
    varying vec2 v_mapCoord;

    void main() {
      v_textureCoord = ${Attributes.TEXTURE_COORD};
      v_mapCoord = vec2(
        ${Uniforms.TEXTURE_ORIGIN_X} + ${Uniforms.TEXTURE_RESOLUTION} * ${Uniforms.TEXTURE_PIXEL_WIDTH} * v_textureCoord[0],
        ${Uniforms.TEXTURE_ORIGIN_Y} - ${Uniforms.TEXTURE_RESOLUTION} * ${Uniforms.TEXTURE_PIXEL_HEIGHT} * v_textureCoord[1]
      );
      gl_Position = ${Uniforms.TILE_TRANSFORM} * vec4(${Attributes.TEXTURE_COORD}, ${Uniforms.DEPTH}, 1.0);
    }
  `;const o={...newCompilationContext(),inFragmentShader:!0,bandCount:e,style:r},s=[],i=(void 0!==r.color&&(u=expressionToGlsl(o,r.color,ColorType),s.push(`color = ${u};`)),void 0!==r.contrast&&(u=expressionToGlsl(o,r.contrast,NumberType),s.push(`color.rgb = clamp((${u} + 1.0) * color.rgb - (${u} / 2.0), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`)),void 0!==r.exposure&&(u=expressionToGlsl(o,r.exposure,NumberType),s.push(`color.rgb = clamp((${u} + 1.0) * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`)),void 0!==r.saturation&&(u=expressionToGlsl(o,r.saturation,NumberType),s.push(`
      float saturation = ${u} + 1.0;
      float sr = (1.0 - saturation) * 0.2126;
      float sg = (1.0 - saturation) * 0.7152;
      float sb = (1.0 - saturation) * 0.0722;
      mat3 saturationMatrix = mat3(
        sr + saturation, sr, sr,
        sg, sg + saturation, sg,
        sb, sb, sb + saturation
      );
      color.rgb = clamp(saturationMatrix * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));
    `)),void 0!==r.gamma&&(u=expressionToGlsl(o,r.gamma,NumberType),s.push(`color.rgb = pow(color.rgb, vec3(1.0 / ${u}));`)),void 0!==r.brightness&&(u=expressionToGlsl(o,r.brightness,NumberType),s.push(`color.rgb = clamp(color.rgb + ${u}, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`)),{});var n=Object.keys(o.variables).length;if(1<n&&!r.variables)throw new Error(`Missing variables in style (expected ${o.variables})`);for(let e=0;e<n;++e){const c=o.variables[Object.keys(o.variables)[e]];if(!(c.name in r.variables))throw new Error(`Missing '${c.name}' in style variables`);var a=uniformNameForVariable(c.name);i[a]=function(){let e=r.variables[c.name];return void 0!==(e="string"==typeof e?getStringNumberEquivalent(e):e)?e:-9999999}}const l=Object.keys(i).map(function(e){return`uniform float ${e};`});var u=Math.ceil(e/4);l.push(`uniform sampler2D ${Uniforms.TILE_TEXTURE_ARRAY}[${u}];`),o.paletteTextures&&l.push(`uniform sampler2D ${PALETTE_TEXTURE_ARRAY}[${o.paletteTextures.length}];`);const m=Object.keys(o.functions).map(function(e){return o.functions[e]});return{vertexShader:t,fragmentShader:`
    #ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
    #else
    precision mediump float;
    #endif

    varying vec2 v_textureCoord;
    varying vec2 v_mapCoord;
    uniform vec4 ${Uniforms.RENDER_EXTENT};
    uniform float ${Uniforms.TRANSITION_ALPHA};
    uniform float ${Uniforms.TEXTURE_PIXEL_WIDTH};
    uniform float ${Uniforms.TEXTURE_PIXEL_HEIGHT};
    uniform float ${Uniforms.RESOLUTION};
    uniform float ${Uniforms.ZOOM};

    ${l.join("\n")}

    ${m.join("\n")}

    void main() {
      if (
        v_mapCoord[0] < ${Uniforms.RENDER_EXTENT}[0] ||
        v_mapCoord[1] < ${Uniforms.RENDER_EXTENT}[1] ||
        v_mapCoord[0] > ${Uniforms.RENDER_EXTENT}[2] ||
        v_mapCoord[1] > ${Uniforms.RENDER_EXTENT}[3]
      ) {
        discard;
      }

      vec4 color = texture2D(${Uniforms.TILE_TEXTURE_ARRAY}[0],  v_textureCoord);

      ${s.join("\n")}

      gl_FragColor = color;
      gl_FragColor.rgb *= gl_FragColor.a;
      gl_FragColor *= ${Uniforms.TRANSITION_ALPHA};
    }`,uniforms:i,paletteTextures:o.paletteTextures}}class WebGLTileLayer extends BaseTileLayer{constructor(e){var r=(e=e?Object.assign({},e):{}).style||{},t=(delete e.style,e.cacheSize);delete e.cacheSize,super(e),this.sources_=e.sources,this.renderedSource_=null,this.renderedResolution_=NaN,this.style_=r,this.cacheSize_=t,this.styleVariables_=this.style_.variables||{},this.addChangeListener(LayerProperty.SOURCE,this.handleSourceUpdate_)}getSources(e,r){var t=this.getSource();return this.sources_?"function"==typeof this.sources_?this.sources_(e,r):this.sources_:t?[t]:[]}getRenderSource(){return this.renderedSource_||this.getSource()}getSourceState(){const e=this.getRenderSource();return e?e.getState():"undefined"}handleSourceUpdate_(){this.hasRenderer()&&this.getRenderer().clearCache(),this.getSource()&&this.setStyle(this.style_)}getSourceBandCount_(){var e=Number.MAX_SAFE_INTEGER,e=this.getSources([-e,-e,e,e],e);return e&&e.length&&"bandCount"in e[0]?e[0].bandCount:4}createRenderer(){var e=parseStyle(this.style_,this.getSourceBandCount_());return new WebGLTileLayerRenderer(this,{vertexShader:e.vertexShader,fragmentShader:e.fragmentShader,uniforms:e.uniforms,cacheSize:this.cacheSize_,paletteTextures:e.paletteTextures})}renderSources(t,o){const s=this.getRenderer();let i;for(let e=0,r=o.length;e<r;++e)this.renderedSource_=o[e],s.prepareFrame(t)&&(i=s.renderFrame(t));return i}render(e,r){this.rendered=!0;var t=e.viewState;const o=this.getSources(e.extent,t.resolution);let s=!0;for(let e=0,r=o.length;e<r;++e){const a=o[e];var i=a.getState();if("loading"==i){const l=()=>{"ready"==a.getState()&&(a.removeEventListener("change",l),this.changed())};a.addEventListener("change",l)}s=s&&"ready"==i}var n=this.renderSources(e,o);if(this.getRenderer().renderComplete&&s)return this.renderedResolution_=t.resolution,n;if(this.renderedResolution_>.5*t.resolution){t=this.getSources(e.extent,this.renderedResolution_).filter(e=>!o.includes(e));if(0<t.length)return this.renderSources(e,t)}return n}setStyle(e){this.styleVariables_=e.variables||{},this.style_=e;e=parseStyle(this.style_,this.getSourceBandCount_());const r=this.getRenderer();r.reset({vertexShader:e.vertexShader,fragmentShader:e.fragmentShader,uniforms:e.uniforms,paletteTextures:e.paletteTextures}),this.changed()}updateStyleVariables(e){Object.assign(this.styleVariables_,e),this.changed()}}WebGLTileLayer.prototype.dispose;export default WebGLTileLayer;