import Projection from"./proj/Projection.js";import{PROJECTIONS as EPSG3857_PROJECTIONS,fromEPSG4326,toEPSG4326}from"./proj/epsg3857.js";import{PROJECTIONS as EPSG4326_PROJECTIONS}from"./proj/epsg4326.js";import{METERS_PER_UNIT}from"./proj/Units.js";import{add as addProj,clear as clearProj,get as getProj}from"./proj/projections.js";import{add as addTransformFunc,clear as clearTransformFuncs,get as getTransformFunc}from"./proj/transforms.js";import{applyTransform,getWidth}from"./extent.js";import{clamp,modulo}from"./math.js";import{equals,getWorldsAway}from"./coordinate.js";import{getDistance}from"./sphere.js";import{warn}from"./console.js";let showCoordinateWarning=!0;function disableCoordinateWarning(r){r=void 0===r||r;showCoordinateWarning=!r}function cloneTransform(e,t){if(void 0!==t)for(let r=0,o=e.length;r<o;++r)t[r]=e[r];else t=e.slice();return t}function identityTransform(e,t){if(void 0!==t&&e!==t){for(let r=0,o=e.length;r<o;++r)t[r]=e[r];e=t}return e}function addProjection(r){addProj(r.getCode(),r),addTransformFunc(r,r,cloneTransform)}function addProjections(r){r.forEach(addProjection)}function get(r){return"string"==typeof r?getProj(r):r||null}function getPointResolution(r,o,e,t){let n;const i=(r=get(r)).getPointResolutionFunc();if(i)n=i(o,e),!t||t===r.getUnits()||(s=r.getMetersPerUnit())&&(n=n*s/METERS_PER_UNIT[t]);else{var s=r.getUnits();if("degrees"==s&&!t||"degrees"==t)n=o;else{const a=getTransformFromProjections(r,get("EPSG:4326"));if(a===identityTransform&&"degrees"!==s)n=o*r.getMetersPerUnit();else{let r=[e[0]-o/2,e[1],e[0]+o/2,e[1],e[0],e[1]-o/2,e[0],e[1]+o/2];r=a(r,r,2);s=getDistance(r.slice(0,2),r.slice(2,4)),e=getDistance(r.slice(4,6),r.slice(6,8));n=(s+e)/2}o=t?METERS_PER_UNIT[t]:r.getMetersPerUnit();void 0!==o&&(n/=o)}}return n}function addEquivalentProjections(r){addProjections(r),r.forEach(function(o){r.forEach(function(r){o!==r&&addTransformFunc(o,r,cloneTransform)})})}function addEquivalentTransforms(r,e,t,n){r.forEach(function(o){e.forEach(function(r){addTransformFunc(o,r,t),addTransformFunc(r,o,n)})})}function clearAllProjections(){clearProj(),clearTransformFuncs()}function createProjection(r,o){return r?"string"==typeof r?get(r):r:get(o)}function createTransformFromCoordinateTransform(o){return function(t,n,i){var r=t.length;i=void 0!==i?i:2,n=void 0!==n?n:new Array(r);for(let e=0;e<r;e+=i){var s=o(t.slice(e,e+i)),a=s.length;for(let r=0,o=i;r<o;++r)n[e+r]=r>=a?t[e+r]:s[r]}return n}}function addCoordinateTransforms(r,o,e,t){r=get(r),o=get(o);addTransformFunc(r,o,createTransformFromCoordinateTransform(e)),addTransformFunc(o,r,createTransformFromCoordinateTransform(t))}function fromLonLat(r,o){return disableCoordinateWarning(),transform(r,"EPSG:4326",void 0!==o?o:"EPSG:3857")}function toLonLat(r,o){const e=transform(r,void 0!==o?o:"EPSG:3857","EPSG:4326");r=e[0];return(r<-180||180<r)&&(e[0]=modulo(r+180,360)-180),e}function equivalent(r,o){if(r===o)return!0;var e=r.getUnits()===o.getUnits();return(r.getCode()===o.getCode()||getTransformFromProjections(r,o)===cloneTransform)&&e}function getTransformFromProjections(r,o){r=r.getCode(),o=o.getCode();let e=getTransformFunc(r,o);return e=e||identityTransform}function getTransform(r,o){return getTransformFromProjections(get(r),get(o))}function transform(r,o,e){const t=getTransform(o,e);return t(r,void 0,r.length)}function transformExtent(r,o,e,t){o=getTransform(o,e);return applyTransform(r,o,void 0,t)}function transformWithProjections(r,o,e){const t=getTransformFromProjections(o,e);return t(r)}let userProjection=null;function setUserProjection(r){userProjection=get(r)}function clearUserProjection(){userProjection=null}function getUserProjection(){return userProjection}function useGeographic(){setUserProjection("EPSG:4326")}function toUserCoordinate(r,o){return userProjection?transform(r,o,userProjection):r}function fromUserCoordinate(r,o){return userProjection?transform(r,userProjection,o):(showCoordinateWarning&&!equals(r,[0,0])&&-180<=r[0]&&r[0]<=180&&-90<=r[1]&&r[1]<=90&&(showCoordinateWarning=!1,warn("Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.")),r)}function toUserExtent(r,o){return userProjection?transformExtent(r,o,userProjection):r}function fromUserExtent(r,o){return userProjection?transformExtent(r,userProjection,o):r}function toUserResolution(r,o){if(!userProjection)return r;var o=get(o).getMetersPerUnit(),e=userProjection.getMetersPerUnit();return o&&e?r*o/e:r}function fromUserResolution(r,o){if(!userProjection)return r;var o=get(o).getMetersPerUnit(),e=userProjection.getMetersPerUnit();return o&&e?r*e/o:r}function createSafeCoordinateTransform(i,s,a){return function(r){let o,e;var t,n;return o=(i.canWrapX()&&(t=i.getExtent(),n=getWidth(t),r=r.slice(0),(e=getWorldsAway(r,i,n))&&(r[0]=r[0]-e*n),r[0]=clamp(r[0],t[0],t[2]),r[1]=clamp(r[1],t[1],t[3])),a(r)),e&&s.canWrapX()&&(o[0]+=e*getWidth(s.getExtent())),o}}function addCommon(){addEquivalentProjections(EPSG3857_PROJECTIONS),addEquivalentProjections(EPSG4326_PROJECTIONS),addEquivalentTransforms(EPSG4326_PROJECTIONS,EPSG3857_PROJECTIONS,fromEPSG4326,toEPSG4326)}addCommon();export{METERS_PER_UNIT,Projection,disableCoordinateWarning,cloneTransform,identityTransform,addProjection,addProjections,get,getPointResolution,addEquivalentProjections,addEquivalentTransforms,clearAllProjections,createProjection,createTransformFromCoordinateTransform,addCoordinateTransforms,fromLonLat,toLonLat,equivalent,getTransformFromProjections,getTransform,transform,transformExtent,transformWithProjections,setUserProjection,clearUserProjection,getUserProjection,useGeographic,toUserCoordinate,fromUserCoordinate,toUserExtent,fromUserExtent,toUserResolution,fromUserResolution,createSafeCoordinateTransform,addCommon};