function binarySearch(r,e,n){var t,i;n=n||ascending;let u=0,f=r.length,o=!1;for(;u<f;)(i=+n(r[t=u+(f-u>>1)],e))<0?u=t+1:(f=t,o=!i);return o?u:~u}function ascending(r,e){return e<r?1:r<e?-1:0}function descending(r,e){return r<e?1:e<r?-1:0}function linearFindNearest(e,n,t){if(e[0]<=n)return 0;var i=e.length;if(n<=e[i-1])return i-1;if("function"==typeof t){for(let r=1;r<i;++r){var u=e[r];if(u===n)return r;if(u<n)return 0<t(n,e[r-1],u)?r-1:r}return i-1}if(0<t){for(let r=1;r<i;++r)if(e[r]<n)return r-1;return i-1}if(t<0){for(let r=1;r<i;++r)if(e[r]<=n)return r;return i-1}for(let r=1;r<i;++r){if(e[r]==n)return r;if(e[r]<n)return e[r-1]-n<n-e[r]?r-1:r}return i-1}function reverseSubArray(r,e,n){for(;e<n;){var t=r[e];r[e]=r[n],r[n]=t,++e,--n}}function extend(e,r){var n=Array.isArray(r)?r:[r],t=n.length;for(let r=0;r<t;r++)e[e.length]=n[r]}function remove(r,e){var e=r.indexOf(e),n=-1<e;return n&&r.splice(e,1),n}function equals(e,n){var t=e.length;if(t!==n.length)return!1;for(let r=0;r<t;r++)if(e[r]!==n[r])return!1;return!0}function stableSort(r,n){var e=r.length;const t=Array(r.length);let i;for(i=0;i<e;i++)t[i]={index:i,value:r[i]};for(t.sort(function(r,e){return n(r.value,e.value)||r.index-e.index}),i=0;i<r.length;i++)r[i]=t[i].value}function isSorted(n,r,t){const i=r||ascending;return n.every(function(r,e){if(0===e)return!0;e=i(n[e-1],r);return!(0<e||t&&0===e)})}export{binarySearch,ascending,descending,linearFindNearest,reverseSubArray,extend,remove,equals,stableSort,isSorted};