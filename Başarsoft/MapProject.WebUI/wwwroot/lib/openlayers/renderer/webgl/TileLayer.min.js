import ReprojDataTile from"../../reproj/DataTile.js";import ReprojTile from"../../reproj/Tile.js";import TileState from"../../TileState.js";import TileTexture from"../../webgl/TileTexture.js";import WebGLArrayBuffer from"../../webgl/Buffer.js";import WebGLBaseTileLayerRenderer,{Uniforms as BaseUniforms,getCacheKey}from"./TileLayerBase.js";import{AttributeType}from"../../webgl/Helper.js";import{ELEMENT_ARRAY_BUFFER,STATIC_DRAW}from"../../webgl.js";import{apply as applyTransform}from"../../transform.js";import{boundingExtent,containsCoordinate,getIntersection}from"../../extent.js";import{fromUserExtent}from"../../proj.js";import{fromTransform as mat4FromTransform}from"../../vec/mat4.js";import{toSize}from"../../size.js";const Uniforms={...BaseUniforms,TILE_TEXTURE_ARRAY:"u_tileTextures",TEXTURE_PIXEL_WIDTH:"u_texturePixelWidth",TEXTURE_PIXEL_HEIGHT:"u_texturePixelHeight",TEXTURE_RESOLUTION:"u_textureResolution",TEXTURE_ORIGIN_X:"u_textureOriginX",TEXTURE_ORIGIN_Y:"u_textureOriginY"},Attributes={TEXTURE_COORD:"a_textureCoord"},attributeDescriptions=[{name:Attributes.TEXTURE_COORD,size:2,type:AttributeType.FLOAT}];class WebGLTileLayerRenderer extends WebGLBaseTileLayerRenderer{constructor(e,t){super(e,t),this.program_,this.vertexShader_=t.vertexShader,this.fragmentShader_=t.fragmentShader,this.indices_=new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER,STATIC_DRAW),this.indices_.fromArray([0,1,3,1,2,3]),this.paletteTextures_=t.paletteTextures||[]}reset(e){if(super.reset(e),this.helper){var t=this.helper.getGL();for(const r of this.paletteTextures_)r.delete(t)}this.vertexShader_=e.vertexShader,this.fragmentShader_=e.fragmentShader,this.paletteTextures_=e.paletteTextures||[],this.helper&&(this.program_=this.helper.getProgram(this.fragmentShader_,this.vertexShader_))}afterHelperCreated(){this.program_=this.helper.getProgram(this.fragmentShader_,this.vertexShader_),this.helper.flushBufferData(this.indices_)}removeHelper(){if(this.helper){var e=this.helper.getGL();for(const t of this.paletteTextures_)t.delete(e)}super.removeHelper()}createTileRepresentation(e){return new TileTexture(e)}beforeTilesRender(e,t){super.beforeTilesRender(e,t),this.helper.useProgram(this.program_,e)}renderTile(e,t,r,i,s,o,a,n,l,h,f){var T=this.helper.getGL();this.helper.bindBuffer(e.coords),this.helper.bindBuffer(this.indices_),this.helper.enableAttributes(attributeDescriptions);let p=0;for(;p<e.textures.length;){var m=`${Uniforms.TILE_TEXTURE_ARRAY}[${p}]`;this.helper.bindTexture(e.textures[p],p,m),++p}for(let e=0;e<this.paletteTextures_.length;++e){const U=this.paletteTextures_[e];var u=U.getTexture(T);this.helper.bindTexture(u,p,U.name),++p}var r=r.viewState,_=o[0]+2*h,E=o[1]+2*h,d=e.tile.tileCoord,g=d[1],d=d[2];this.helper.setUniformMatrixValue(Uniforms.TILE_TRANSFORM,mat4FromTransform(this.tempMat4,t)),this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA,f),this.helper.setUniformFloatValue(Uniforms.DEPTH,l);let R=i;0<h&&(R=n,getIntersection(R,i,R)),this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT,R),this.helper.setUniformFloatValue(Uniforms.RESOLUTION,r.resolution),this.helper.setUniformFloatValue(Uniforms.ZOOM,r.zoom),this.helper.setUniformFloatValue(Uniforms.TEXTURE_PIXEL_WIDTH,_),this.helper.setUniformFloatValue(Uniforms.TEXTURE_PIXEL_HEIGHT,E),this.helper.setUniformFloatValue(Uniforms.TEXTURE_RESOLUTION,s),this.helper.setUniformFloatValue(Uniforms.TEXTURE_ORIGIN_X,a[0]+g*o[0]*s-h*s),this.helper.setUniformFloatValue(Uniforms.TEXTURE_ORIGIN_Y,a[1]-d*o[1]*s+h*s),this.helper.drawElements(0,this.indices_.getSize())}getData(e){if(!this.helper.getGL())return null;var t=this.frameState;if(!t)return null;const r=this.getLayer();var i=applyTransform(t.pixelToCoordinateTransform,e.slice()),s=t.viewState,e=r.getExtent();if(e&&!containsCoordinate(fromUserExtent(e,s.projection),i))return null;var o=r.getSources(boundingExtent([i]),s.resolution);let a,n,l;for(a=o.length-1;0<=a;--a)if("ready"===(n=o[a]).getState()){if(l=n.getTileGridForProjection(s.projection),n.getWrapX())break;var h=l.getExtent();if(!h||containsCoordinate(h,i))break}if(a<0)return null;const f=this.tileRepresentationCache;for(let e=l.getZForResolution(s.resolution);e>=l.getMinZoom();--e){var T,p,m,u=l.getTileCoordForCoordAndZ(i,e),_=getCacheKey(n,u);if(f.containsKey(_)){const E=f.get(_),d=E.tile;if((d instanceof ReprojTile||d instanceof ReprojDataTile)&&d.getState()===TileState.EMPTY)return null;if(E.loaded)return _=l.getOrigin(e),T=toSize(l.getTileSize(e)),p=l.getResolution(e),m=(i[0]-_[0])/p-u[1]*T[0],_=(_[1]-i[1])/p-u[2]*T[1],E.getPixelData(m,_)}}return null}disposeInternal(){const e=this.helper;if(e){const t=e.getGL();for(const r of this.paletteTextures_)r.delete(t);this.paletteTextures_.length=0,t.deleteProgram(this.program_),delete this.program_,e.deleteBuffer(this.indices_)}super.disposeInternal(),delete this.indices_}}export default WebGLTileLayerRenderer;export{Uniforms,Attributes};