import LayerRenderer from"../Layer.js";import RenderEvent from"../../render/Event.js";import RenderEventType from"../../render/EventType.js";import ZIndexContext from"../../render/canvas/ZIndexContext.js";import{apply as applyTransform,compose as composeTransform,create as createTransform,makeInverse,toString as toTransformString}from"../../transform.js";import{asArray}from"../../color.js";import{createCanvasContext2D}from"../../dom.js";import{equals}from"../../array.js";import{getBottomLeft,getBottomRight,getHeight,getTopLeft,getTopRight,getWidth}from"../../extent.js";const canvasPool=[];let pixelContext=null;function createPixelContext(){pixelContext=createCanvasContext2D(1,1,void 0,{willReadFrequently:!0})}class CanvasLayerRenderer extends LayerRenderer{constructor(e){super(e),this.container=null,this.renderedResolution,this.tempTransform=createTransform(),this.pixelTransform=createTransform(),this.inversePixelTransform=createTransform(),this.context=null,this.deferredContext_=null,this.containerReused=!1,this.pixelContext_=null,this.frameState=null}getImageData(e,t,r){pixelContext||createPixelContext(),pixelContext.clearRect(0,0,1,1);let n;try{pixelContext.drawImage(e,t,r,1,1,0,0,1,1),n=pixelContext.getImageData(0,0,1,1).data}catch(e){return pixelContext=null}return n}getBackground(e){const t=this.getLayer();let r=t.getBackground();return(r="function"==typeof r?r(e.viewState.resolution):r)||void 0}useContainer(e,t,r){var n=this.getLayer().getClassName();let o,a;if(e&&e.className===n&&(!r||e&&e.style.backgroundColor&&equals(asArray(e.style.backgroundColor),asArray(r)))){const s=e.firstElementChild;s instanceof HTMLCanvasElement&&(a=s.getContext("2d"))}if(a&&a.canvas.style.transform===t?(this.container=e,this.context=a,this.containerReused=!0):this.containerReused?(this.container=null,this.context=null,this.containerReused=!1):this.container&&(this.container.style.backgroundColor=null),!this.container){(o=document.createElement("div")).className=n;let e=o.style;e.position="absolute",e.width="100%",e.height="100%";t=(a=createCanvasContext2D()).canvas;o.appendChild(t),(e=t.style).position="absolute",e.left="0",e.transformOrigin="top left",this.container=o,this.context=a}this.containerReused||!r||this.container.style.backgroundColor||(this.container.style.backgroundColor=r)}clipUnrotated(e,t,r){var n=getTopLeft(r),o=getTopRight(r),a=getBottomRight(r),r=getBottomLeft(r),t=(applyTransform(t.coordinateToPixelTransform,n),applyTransform(t.coordinateToPixelTransform,o),applyTransform(t.coordinateToPixelTransform,a),applyTransform(t.coordinateToPixelTransform,r),this.inversePixelTransform);applyTransform(t,n),applyTransform(t,o),applyTransform(t,a),applyTransform(t,r),e.save(),e.beginPath(),e.moveTo(Math.round(n[0]),Math.round(n[1])),e.lineTo(Math.round(o[0]),Math.round(o[1])),e.lineTo(Math.round(a[0]),Math.round(a[1])),e.lineTo(Math.round(r[0]),Math.round(r[1])),e.clip()}prepareContainer(e,t){var r=e.extent,n=e.viewState.resolution,o=e.viewState.rotation,a=e.pixelRatio,s=Math.round(getWidth(r)/n*a),r=Math.round(getHeight(r)/n*a),n=(composeTransform(this.pixelTransform,e.size[0]/2,e.size[1]/2,1/a,1/a,o,-s/2,-r/2),makeInverse(this.inversePixelTransform,this.pixelTransform),toTransformString(this.pixelTransform));if(this.useContainer(t,n,this.getBackground(e)),!this.containerReused){const i=this.context.canvas;i.width!=s||i.height!=r?(i.width=s,i.height=r):this.context.clearRect(0,0,s,r),n!==i.style.transform&&(i.style.transform=n)}}dispatchRenderEvent_(e,t,r){const n=this.getLayer();n.hasListener(e)&&(e=new RenderEvent(e,this.inversePixelTransform,r,t),n.dispatchEvent(e))}preRender(e,t){(this.frameState=t).declutter||this.dispatchRenderEvent_(RenderEventType.PRERENDER,e,t)}postRender(e,t){t.declutter||this.dispatchRenderEvent_(RenderEventType.POSTRENDER,e,t)}renderDeferredInternal(e){}getRenderContext(e){return e.declutter&&!this.deferredContext_&&(this.deferredContext_=new ZIndexContext),e.declutter?this.deferredContext_.getContext():this.context}renderDeferred(e){e.declutter&&(this.dispatchRenderEvent_(RenderEventType.PRERENDER,this.context,e),e.declutter&&this.deferredContext_&&(this.deferredContext_.draw(this.context),this.deferredContext_.clear()),this.renderDeferredInternal(e),this.dispatchRenderEvent_(RenderEventType.POSTRENDER,this.context,e))}getRenderTransform(e,t,r,n,o,a,s){n/=t,t=-e[0]+s,s=-e[1];return composeTransform(this.tempTransform,o/2,a/2,n,-n,-r,t,s)}disposeInternal(){delete this.frameState,super.disposeInternal()}}export default CanvasLayerRenderer;export{canvasPool};