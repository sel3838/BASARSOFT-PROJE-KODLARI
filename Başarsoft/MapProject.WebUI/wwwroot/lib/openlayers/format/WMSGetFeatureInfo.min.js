import GML2 from"./GML2.js";import XMLFeature from"./XMLFeature.js";import{extend}from"../array.js";import{makeArrayPusher,makeStructureNS,pushParseAndPop}from"../xml.js";const featureIdentifier="_feature",layerIdentifier="_layer";class WMSGetFeatureInfo extends XMLFeature{constructor(e){super(),e=e||{},this.featureNS_="http://mapserver.gis.umn.edu/mapserver",this.gmlFormat_=new GML2,this.layers_=e.layers||null}getLayers(){return this.layers_}setLayers(e){this.layers_=e}readFeatures_(r,a){r.setAttribute("namespaceURI",this.featureNS_);var e=r.localName;let s=[];if(0===r.childNodes.length)return s;if("msGMLOutput"==e)for(let e=0,t=r.childNodes.length;e<t;e++){var u=r.childNodes[e];if(u.nodeType===Node.ELEMENT_NODE){const i=u,l=a[0];u=layerIdentifier,u=i.localName.replace(u,"");if(!this.layers_||this.layers_.includes(u)){u=u+featureIdentifier;l.featureType=u,l.featureNS=this.featureNS_;const o={};o[u]=makeArrayPusher(this.gmlFormat_.readFeatureElement,this.gmlFormat_);u=makeStructureNS([l.featureNS,null],o),u=(i.setAttribute("namespaceURI",this.featureNS_),pushParseAndPop([],u,i,a,this.gmlFormat_));u&&extend(s,u)}}}return s="FeatureCollection"==e&&(e=pushParseAndPop([],this.gmlFormat_.FEATURE_COLLECTION_PARSERS,r,[{}],this.gmlFormat_))?e:s}readFeaturesFromNode(e,t){var r={};return t&&Object.assign(r,this.getReadOptions(e,t)),this.readFeatures_(e,[r])}}export default WMSGetFeatureInfo;