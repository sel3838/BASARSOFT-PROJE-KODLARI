import MapBrowserEventType from"../MapBrowserEventType.js";import{FALSE,TRUE}from"../functions.js";import{MAC,WEBKIT}from"../has.js";import{assert}from"../asserts.js";function all(t){const i=arguments;return function(n){let r=!0;for(let t=0,e=i.length;t<e&&(r=r&&i[t](n));++t);return r}}const altKeyOnly=function(t){t=t.originalEvent;return t.altKey&&!(t.metaKey||t.ctrlKey)&&!t.shiftKey},altShiftKeysOnly=function(t){t=t.originalEvent;return t.altKey&&!(t.metaKey||t.ctrlKey)&&t.shiftKey},focus=function(t){const e=t.map.getTargetElement();t=t.map.getOwnerDocument().activeElement;return e.contains(t)},focusWithTabindex=function(t){return!t.map.getTargetElement().hasAttribute("tabindex")||focus(t)},always=TRUE,click=function(t){return t.type==MapBrowserEventType.CLICK},mouseActionButton=function(t){t=t.originalEvent;return 0==t.button&&!(WEBKIT&&MAC&&t.ctrlKey)},never=FALSE,pointerMove=function(t){return"pointermove"==t.type},singleClick=function(t){return t.type==MapBrowserEventType.SINGLECLICK},doubleClick=function(t){return t.type==MapBrowserEventType.DBLCLICK},noModifierKeys=function(t){t=t.originalEvent;return!t.altKey&&!(t.metaKey||t.ctrlKey)&&!t.shiftKey},platformModifierKeyOnly=function(t){t=t.originalEvent;return!t.altKey&&(MAC?t.metaKey:t.ctrlKey)&&!t.shiftKey},platformModifierKey=function(t){t=t.originalEvent;return MAC?t.metaKey:t.ctrlKey},shiftKeyOnly=function(t){t=t.originalEvent;return!t.altKey&&!(t.metaKey||t.ctrlKey)&&t.shiftKey},targetNotEditable=function(t){var t=t.originalEvent,e=t.target.tagName;return"INPUT"!==e&&"SELECT"!==e&&"TEXTAREA"!==e&&!t.target.isContentEditable},mouseOnly=function(t){t=t.originalEvent;return assert(void 0!==t,"mapBrowserEvent must originate from a pointer event"),"mouse"==t.pointerType},touchOnly=function(t){t=t.originalEvent;return assert(void 0!==t,"mapBrowserEvent must originate from a pointer event"),"touch"===t.pointerType},penOnly=function(t){t=t.originalEvent;return assert(void 0!==t,"mapBrowserEvent must originate from a pointer event"),"pen"===t.pointerType},primaryAction=function(t){t=t.originalEvent;return assert(void 0!==t,"mapBrowserEvent must originate from a pointer event"),t.isPrimary&&0===t.button};export{all,altKeyOnly,altShiftKeysOnly,focus,focusWithTabindex,always,click,mouseActionButton,never,pointerMove,singleClick,doubleClick,noModifierKeys,platformModifierKeyOnly,platformModifierKey,shiftKeyOnly,targetNotEditable,mouseOnly,touchOnly,penOnly,primaryAction};