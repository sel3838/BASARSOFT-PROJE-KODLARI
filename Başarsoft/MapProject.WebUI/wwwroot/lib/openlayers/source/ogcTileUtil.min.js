import TileGrid from"../tilegrid/TileGrid.js";import{getJSON,resolveUrl}from"../net.js";import{get as getProjection}from"../proj.js";import{getIntersection as intersectExtents}from"../extent.js";import{error as logError}from"../console.js";const knownMapMediaTypes={"image/png":!0,"image/jpeg":!0,"image/gif":!0,"image/webp":!0},knownVectorMediaTypes={"application/vnd.mapbox-vector-tile":!0,"application/geo+json":!0};function appendCollectionsQueryParam(e,t){if(!t.length)return e;const i=new URL(e,"file:/");if(i.pathname.split("/").includes("collections"))return logError('The "collections" query parameter cannot be added to collection endpoints'),e;t=t.map(e=>encodeURIComponent(e)).join(","),i.searchParams.append("collections",t),t=e.split("?")[0];return t+"?"+decodeURIComponent(i.searchParams.toString())}function getMapTileUrlTemplate(t,i,e){let r,n;for(let e=0;e<t.length;++e){const o=t[e];if("item"===o.rel){if(o.type===i){r=o.href;break}(knownMapMediaTypes[o.type]||!n&&o.type.startsWith("image/"))&&(n=o.href)}}if(!r){if(!n)throw new Error('Could not find "item" link');r=n}return r=e?appendCollectionsQueryParam(r,e):r}function getVectorTileUrlTemplate(t,i,r,e){let n,o;const l={};for(let e=0;e<t.length;++e){var a=t[e];if(l[a.type]=a.href,"item"===a.rel){if(a.type===i){n=a.href;break}knownVectorMediaTypes[a.type]&&(o=a.href)}}if(!n&&r)for(let e=0;e<r.length;++e){var s=r[e];if(l[s]){n=l[s];break}}if(!n){if(!o)throw new Error('Could not find "item" link');n=o}return n=e?appendCollectionsQueryParam(n,e):n}function parseTileMatrixSet(e,t,a,s){let i=e.projection;if(!i&&!(i=getProjection(t.crs)))throw new Error("Unsupported CRS: "+t.crs);const r=t.orderedAxes;var n="en"!==(r?r.slice(0,2).map(e=>e.replace(/E|X|Lon/i,"e").replace(/N|Y|Lat/i,"n")).join(""):i.getAxisOrientation().substr(0,2)),o=t.tileMatrices;const p={};for(let e=0;e<o.length;++e){var l=o[e];p[l.id]=l}const c={},f=[];if(s)for(let e=0;e<s.length;++e){var m=s[e],g=m.tileMatrix;f.push(g),c[g]=m}else for(let e=0;e<o.length;++e){var d=o[e].id;f.push(d)}var u=f.length;const T=new Array(u),h=new Array(u),w=new Array(u),x=new Array(u);var y=[-1/0,-1/0,1/0,1/0];for(let i=0;i<u;++i){var M=f[i],S=p[M],v=S.pointOfOrigin,v=(T[i]=n?[v[1],v[0]]:v,h[i]=S.cellSize,w[i]=[S.matrixWidth,S.matrixHeight],x[i]=[S.tileWidth,S.tileHeight],c[M]);if(v){var M=S.cellSize*S.tileWidth,C=T[i][0]+v.minTileCol*M,M=T[i][0]+(v.maxTileCol+1)*M,j=S.cellSize*S.tileHeight,S="bottomLeft"===S.cornerOfOrigin;let e,t;t=S?(e=T[i][1]+v.minTileRow*j,T[i][1]+(v.maxTileRow+1)*j):(e=T[i][1]-(v.maxTileRow+1)*j,T[i][1]-v.minTileRow*j),intersectExtents(y,[C,e,M,t],y)}}t=new TileGrid({origins:T,resolutions:h,sizes:w,tileSizes:x,extent:s?y:void 0});const k=e.context,R=e.url;return{grid:t,urlTemplate:a,urlFunction:function(e,t,i){if(e){var r=f[e[0]],n=p[r],o="bottomLeft"===n.cornerOfOrigin;const l={tileMatrix:r,tileCol:e[1],tileRow:o?-e[2]-1:e[2]};if(s){r=c[n.id];if(l.tileCol<r.minTileCol||l.tileCol>r.maxTileCol||l.tileRow<r.minTileRow||l.tileRow>r.maxTileRow)return}Object.assign(l,k);o=a.replace(/\{(\w+?)\}/g,function(e,t){return l[t]});return resolveUrl(R,o)}}}}function parseTileSetMetadata(t,e){const i=e.tileMatrixSetLimits;let r;if("map"===e.dataType)r=getMapTileUrlTemplate(e.links,t.mediaType,t.collections);else{if("vector"!==e.dataType)throw new Error('Expected tileset data type to be "map" or "vector"');r=getVectorTileUrlTemplate(e.links,t.mediaType,t.supportedMediaTypes,t.collections)}if(e.tileMatrixSet)return parseTileMatrixSet(t,e.tileMatrixSet,r,i);e=e.links.find(e=>"http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme"===e.rel);if(!e)throw new Error("Expected http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme link or tileMatrixSet");e=e.href,e=resolveUrl(t.url,e);return getJSON(e).then(function(e){return parseTileMatrixSet(t,e,r,i)})}function getTileSetInfo(t){return getJSON(t.url).then(function(e){return parseTileSetMetadata(t,e)})}export{appendCollectionsQueryParam,getMapTileUrlTemplate,getVectorTileUrlTemplate,getTileSetInfo};