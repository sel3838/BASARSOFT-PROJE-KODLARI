import EventType from"../events/EventType.js";import ImageSource,{defaultImageLoadFunction}from"./Image.js";import ImageWrapper,{decode}from"../Image.js";import{createLoader}from"./static.js";import{get as getProjection}from"../proj.js";import{intersects}from"../extent.js";class Static extends ImageSource{constructor(e){var t=void 0!==e.crossOrigin?e.crossOrigin:null;const i=void 0!==e.imageLoadFunction?e.imageLoadFunction:defaultImageLoadFunction;super({attributions:e.attributions,interpolate:e.interpolate,projection:getProjection(e.projection)}),this.url_=e.url,this.imageExtent_=e.imageExtent,this.image=null,this.image=new ImageWrapper(this.imageExtent_,void 0,1,createLoader({url:e.url,imageExtent:e.imageExtent,crossOrigin:t,load:(e,t)=>(this.image.setImage(e),i(this.image,t),decode(e))})),this.image.addEventListener(EventType.CHANGE,this.handleImageChange.bind(this))}getImageExtent(){return this.imageExtent_}getImageInternal(e,t,i,r){return intersects(e,this.image.getExtent())?this.image:null}getUrl(){return this.url_}}export default Static;