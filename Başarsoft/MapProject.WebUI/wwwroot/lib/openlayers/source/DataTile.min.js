import DataTile from"../DataTile.js";import EventType from"../events/EventType.js";import ReprojDataTile from"../reproj/DataTile.js";import TileCache from"../TileCache.js";import TileEventType from"./TileEventType.js";import TileSource,{TileSourceEvent}from"./Tile.js";import TileState from"../TileState.js";import{createXYZ,extentFromProjection,getForProjection as getTileGridForProjection}from"../tilegrid.js";import{equivalent,get as getProjection}from"../proj.js";import{getKeyZXY}from"../tilecoord.js";import{getUid}from"../util.js";import{toPromise}from"../functions.js";import{toSize}from"../size.js";class DataTileSource extends TileSource{constructor(e){var t=void 0===e.projection?"EPSG:3857":e.projection;let i=e.tileGrid;void 0===i&&t&&(i=createXYZ({extent:extentFromProjection(t),maxResolution:e.maxResolution,maxZoom:e.maxZoom,minZoom:e.minZoom,tileSize:e.tileSize})),super({cacheSize:.1,attributions:e.attributions,attributionsCollapsible:e.attributionsCollapsible,projection:t,tileGrid:i,opaque:e.opaque,state:e.state,wrapX:e.wrapX,transition:e.transition,interpolate:e.interpolate}),this.gutter_=void 0!==e.gutter?e.gutter:0,this.tileSize_=e.tileSize?toSize(e.tileSize):null,this.tileSizes_=null,this.tileLoadingKeys_={},this.loader_=e.loader,this.handleTileChange_=this.handleTileChange_.bind(this),this.bandCount=void 0===e.bandCount?4:e.bandCount,this.tileGridForProjection_={},this.tileCacheForProjection_={}}setTileSizes(e){this.tileSizes_=e}getTileSize(e){if(this.tileSizes_)return this.tileSizes_[e];if(this.tileSize_)return this.tileSize_;const t=this.getTileGrid();return t?toSize(t.getTileSize(e)):[256,256]}getGutterForProjection(e){var t=this.getProjection();return!t||equivalent(t,e)?this.gutter_:0}setLoader(e){this.loader_=e}getReprojTile_(e,t,i,o,r){const n=this.getTileCacheForProjection(o);var l=getKeyZXY(e,t,i);if(n.containsKey(l)){l=n.get(l);if(l&&l.key==this.getKey())return l}const s=this.getTileGrid();var l=Math.max.apply(null,s.getResolutions().map((e,t)=>{var i=toSize(s.getTileSize(t)),t=this.getTileSize(t);return Math.max(t[0]/i[0],t[1]/i[1])})),a=this.getTileGridForProjection(r),h=this.getTileGridForProjection(o),e=[e,t,i],t=this.getTileCoordForTileUrlFunction(e,o),i=Object.assign({sourceProj:r,sourceTileGrid:a,targetProj:o,targetTileGrid:h,tileCoord:e,wrappedTileCoord:t,pixelRatio:l,gutter:this.getGutterForProjection(r),getTileFunction:(e,t,i,o)=>this.getTile(e,t,i,o,r)},this.tileOptions);const c=new ReprojDataTile(i);return c.key=this.getKey(),c}getTile(e,t,i,o,r){var n=this.getProjection();if(n&&r&&!equivalent(n,r))return this.getReprojTile_(e,t,i,r,n);r=this.getTileSize(e),n=getKeyZXY(e,t,i);if(this.tileCache.containsKey(n))return this.tileCache.get(n);const l=this.loader_;r=Object.assign({tileCoord:[e,t,i],loader:function(){return toPromise(function(){return l(e,t,i)})},size:r},this.tileOptions);const s=new DataTile(r);return s.key=this.getKey(),s.addEventListener(EventType.CHANGE,this.handleTileChange_),this.tileCache.set(n,s),s}handleTileChange_(e){const t=e.target;var e=getUid(t),i=t.getState();let o;i==TileState.LOADING?(this.tileLoadingKeys_[e]=!0,o=TileEventType.TILELOADSTART):e in this.tileLoadingKeys_&&(delete this.tileLoadingKeys_[e],o=i==TileState.ERROR?TileEventType.TILELOADERROR:i==TileState.LOADED?TileEventType.TILELOADEND:void 0),o&&this.dispatchEvent(new TileSourceEvent(o,t))}getTileGridForProjection(e){var t=this.getProjection();if(this.tileGrid&&(!t||equivalent(t,e)))return this.tileGrid;t=getUid(e);return t in this.tileGridForProjection_||(this.tileGridForProjection_[t]=getTileGridForProjection(e)),this.tileGridForProjection_[t]}setTileGridForProjection(e,t){var e=getProjection(e);!e||(e=getUid(e))in this.tileGridForProjection_||(this.tileGridForProjection_[e]=t)}getTileCacheForProjection(e){var t=this.getProjection();if(!t||equivalent(t,e))return this.tileCache;t=getUid(e);return t in this.tileCacheForProjection_||(this.tileCacheForProjection_[t]=new TileCache(.1)),this.tileCacheForProjection_[t]}expireCache(e,t){var i=this.getTileCacheForProjection(e);this.tileCache.expireCache(this.tileCache==i?t:{});for(const o in this.tileCacheForProjection_){const r=this.tileCacheForProjection_[o];r.expireCache(r==i?t:{})}}clear(){super.clear();for(const e in this.tileCacheForProjection_)this.tileCacheForProjection_[e].clear()}}export default DataTileSource;