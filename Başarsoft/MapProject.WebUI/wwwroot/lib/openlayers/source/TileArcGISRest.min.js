import TileImage from"./TileImage.js";import{createEmpty}from"../extent.js";import{getRequestUrl}from"./arcgisRest.js";import{modulo}from"../math.js";import{scale as scaleSize,toSize}from"../size.js";import{hash as tileCoordHash}from"../tilecoord.js";class TileArcGISRest extends TileImage{constructor(t){super({attributions:(t=t||{}).attributions,cacheSize:t.cacheSize,crossOrigin:t.crossOrigin,interpolate:t.interpolate,projection:t.projection,reprojectionErrorThreshold:t.reprojectionErrorThreshold,tileGrid:t.tileGrid,tileLoadFunction:t.tileLoadFunction,url:t.url,urls:t.urls,wrapX:void 0===t.wrapX||t.wrapX,transition:t.transition,zDirection:t.zDirection}),this.params_=Object.assign({},t.params),this.hidpi_=void 0===t.hidpi||t.hidpi,this.tmpExtent_=createEmpty(),this.setKey(this.getKeyForParams_())}getKeyForParams_(){let t=0;const e=[];for(const i in this.params_)e[t++]=i+"-"+this.params_[i];return e.join("/")}getParams(){return this.params_}getRequestUrl_(e,t,i,r,s,o){var a=this.urls;if(a){let t;return t=1==a.length?a[0]:a[modulo(tileCoordHash(e),a.length)],getRequestUrl(t,i,(this.tileGrid||this.getTileGridForProjection(s)).getResolution(e[0]),r,s,o)}}getTilePixelRatio(t){return this.hidpi_?t:1}updateParams(t){Object.assign(this.params_,t),this.setKey(this.getKeyForParams_())}tileUrlFunction(e,i,r){let s=this.getTileGrid();if(!((s=s||this.getTileGridForProjection(r)).getResolutions().length<=e[0])){1==i||this.hidpi_||(i=1);var o=s.getTileCoordExtent(e,this.tmpExtent_);let t=toSize(s.getTileSize(e[0]),this.tmpSize);1!=i&&(t=scaleSize(t,i,this.tmpSize));var a={F:"image",FORMAT:"PNG32",TRANSPARENT:!0};return Object.assign(a,this.params_),this.getRequestUrl_(e,t,o,i,r,a)}}}export default TileArcGISRest;