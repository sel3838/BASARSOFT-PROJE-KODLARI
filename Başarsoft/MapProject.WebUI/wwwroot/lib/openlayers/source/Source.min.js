import BaseObject from"../Object.js";import{get as getProjection}from"../proj.js";class Source extends BaseObject{constructor(t){super(),this.projection=getProjection(t.projection),this.attributions_=adaptAttributions(t.attributions),this.attributionsCollapsible_=void 0===t.attributionsCollapsible||t.attributionsCollapsible,this.loading=!1,this.state_=void 0!==t.state?t.state:"ready",this.wrapX_=void 0!==t.wrapX&&t.wrapX,this.interpolate_=!!t.interpolate,this.viewResolver=null,this.viewRejector=null;const i=this;this.viewPromise_=new Promise(function(t,e){i.viewResolver=t,i.viewRejector=e})}getAttributions(){return this.attributions_}getAttributionsCollapsible(){return this.attributionsCollapsible_}getProjection(){return this.projection}getResolutions(t){return null}getView(){return this.viewPromise_}getState(){return this.state_}getWrapX(){return this.wrapX_}getInterpolate(){return this.interpolate_}refresh(){this.changed()}setAttributions(t){this.attributions_=adaptAttributions(t),this.changed()}setState(t){this.state_=t,this.changed()}}function adaptAttributions(e){return e?Array.isArray(e)?function(t){return e}:"function"==typeof e?e:function(t){return[e]}:null}export default Source;