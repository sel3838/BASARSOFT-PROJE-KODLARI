import Layer from"./Layer.js";import RBush from"rbush";import Style,{createDefaultStyle,toFunction as toStyleFunction}from"../style/Style.js";import{flatStylesToStyleFunction,rulesToStyleFunction}from"../render/canvas/style.js";const Property={RENDER_ORDER:"renderOrder"};class BaseVectorLayer extends Layer{constructor(e){e=e||{};const t=Object.assign({},e);delete t.style,delete t.renderBuffer,delete t.updateWhileAnimating,delete t.updateWhileInteracting,super(t),this.declutter_=e.declutter?String(e.declutter):void 0,this.renderBuffer_=void 0!==e.renderBuffer?e.renderBuffer:100,this.style_=null,this.styleFunction_=void 0,this.setStyle(e.style),this.updateWhileAnimating_=void 0!==e.updateWhileAnimating&&e.updateWhileAnimating,this.updateWhileInteracting_=void 0!==e.updateWhileInteracting&&e.updateWhileInteracting}getDeclutter(){return this.declutter_}getFeatures(e){return super.getFeatures(e)}getRenderBuffer(){return this.renderBuffer_}getRenderOrder(){return this.get(Property.RENDER_ORDER)}getStyle(){return this.style_}getStyleFunction(){return this.styleFunction_}getUpdateWhileAnimating(){return this.updateWhileAnimating_}getUpdateWhileInteracting(){return this.updateWhileInteracting_}renderDeclutter(e,t){var r=this.getDeclutter();r in e.declutter==!1&&(e.declutter[r]=new RBush(9)),this.getRenderer().renderDeclutter(e,t)}setRenderOrder(e){this.set(Property.RENDER_ORDER,e)}setStyle(e){this.style_=void 0===e?createDefaultStyle:e;var t=toStyleLike(e);this.styleFunction_=null===e?void 0:toStyleFunction(t),this.changed()}}function toStyleLike(t){if(void 0===t)return createDefaultStyle;if(!t)return null;if("function"==typeof t)return t;if(t instanceof Style)return t;if(!Array.isArray(t))return flatStylesToStyleFunction([t]);if(0===t.length)return[];var r=t.length,e=t[0];if(e instanceof Style){const l=new Array(r);for(let e=0;e<r;++e){var n=t[e];if(!(n instanceof Style))throw new Error("Expected a list of style instances");l[e]=n}return l}if("style"in e){const s=new Array(r);for(let e=0;e<r;++e){var i=t[e];if(!("style"in i))throw new Error("Expected a list of rules with a style property");s[e]=i}return rulesToStyleFunction(s)}return flatStylesToStyleFunction(t)}export default BaseVectorLayer;