import Feature from"../Feature.js";import Fill from"../style/Fill.js";import GeometryCollection from"../geom/GeometryCollection.js";import Icon from"../style/Icon.js";import ImageState from"../ImageState.js";import LineString from"../geom/LineString.js";import MultiLineString from"../geom/MultiLineString.js";import MultiPoint from"../geom/MultiPoint.js";import MultiPolygon from"../geom/MultiPolygon.js";import Point from"../geom/Point.js";import Polygon from"../geom/Polygon.js";import Stroke from"../style/Stroke.js";import Style from"../style/Style.js";import Text from"../style/Text.js";import XMLFeature from"./XMLFeature.js";import{OBJECT_PROPERTY_NODE_FACTORY,XML_SCHEMA_INSTANCE_URI,createElementNS,getAllTextContent,isDocument,makeArrayExtender,makeArrayPusher,makeChildAppender,makeObjectPropertySetter,makeReplacer,makeSequence,makeSimpleNodeFactory,makeStructureNS,parse,parseNode,pushParseAndPop,pushSerializeAndPop}from"../xml.js";import{asArray}from"../color.js";import{extend}from"../array.js";import{get as getProjection}from"../proj.js";import{readBoolean,readDecimal,readString,writeBooleanTextNode,writeCDATASection,writeDecimalTextNode,writeStringTextNode}from"./xsd.js";import{toRadians}from"../math.js";import{transformGeometryWithOptions}from"./Feature.js";const GX_NAMESPACE_URIS=["http://www.google.com/kml/ext/2.2"],NAMESPACE_URIS=[null,"http://earth.google.com/kml/2.0","http://earth.google.com/kml/2.1","http://earth.google.com/kml/2.2","http://www.opengis.net/kml/2.2"],SCHEMA_LOCATION="http://www.opengis.net/kml/2.2 https://developers.google.com/kml/schema/kml22gx.xsd",ICON_ANCHOR_UNITS_MAP={fraction:"fraction",pixels:"pixels",insetPixels:"pixels"},PLACEMARK_PARSERS=makeStructureNS(NAMESPACE_URIS,{ExtendedData:extendedDataParser,Region:regionParser,MultiGeometry:makeObjectPropertySetter(readMultiGeometry,"geometry"),LineString:makeObjectPropertySetter(readLineString,"geometry"),LinearRing:makeObjectPropertySetter(readLinearRing,"geometry"),Point:makeObjectPropertySetter(readPoint,"geometry"),Polygon:makeObjectPropertySetter(readPolygon,"geometry"),Style:makeObjectPropertySetter(readStyle),StyleMap:placemarkStyleMapParser,address:makeObjectPropertySetter(readString),description:makeObjectPropertySetter(readString),name:makeObjectPropertySetter(readString),open:makeObjectPropertySetter(readBoolean),phoneNumber:makeObjectPropertySetter(readString),styleUrl:makeObjectPropertySetter(readStyleURL),visibility:makeObjectPropertySetter(readBoolean)},makeStructureNS(GX_NAMESPACE_URIS,{MultiTrack:makeObjectPropertySetter(readGxMultiTrack,"geometry"),Track:makeObjectPropertySetter(readGxTrack,"geometry")})),NETWORK_LINK_PARSERS=makeStructureNS(NAMESPACE_URIS,{ExtendedData:extendedDataParser,Region:regionParser,Link:linkParser,address:makeObjectPropertySetter(readString),description:makeObjectPropertySetter(readString),name:makeObjectPropertySetter(readString),open:makeObjectPropertySetter(readBoolean),phoneNumber:makeObjectPropertySetter(readString),visibility:makeObjectPropertySetter(readBoolean)}),LINK_PARSERS=makeStructureNS(NAMESPACE_URIS,{href:makeObjectPropertySetter(readURI)}),CAMERA_PARSERS=makeStructureNS(NAMESPACE_URIS,{Altitude:makeObjectPropertySetter(readDecimal),Longitude:makeObjectPropertySetter(readDecimal),Latitude:makeObjectPropertySetter(readDecimal),Tilt:makeObjectPropertySetter(readDecimal),AltitudeMode:makeObjectPropertySetter(readString),Heading:makeObjectPropertySetter(readDecimal),Roll:makeObjectPropertySetter(readDecimal)}),REGION_PARSERS=makeStructureNS(NAMESPACE_URIS,{LatLonAltBox:latLonAltBoxParser,Lod:lodParser}),KML_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["Document","Placemark"]),KML_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{Document:makeChildAppender(writeDocument),Placemark:makeChildAppender(writePlacemark)});let DEFAULT_COLOR,DEFAULT_FILL_STYLE=null;function getDefaultFillStyle(){return DEFAULT_FILL_STYLE}let DEFAULT_IMAGE_STYLE_ANCHOR,DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,DEFAULT_IMAGE_STYLE_SIZE,DEFAULT_IMAGE_STYLE_SRC,DEFAULT_IMAGE_STYLE=null;function getDefaultImageStyle(){return DEFAULT_IMAGE_STYLE}let DEFAULT_NO_IMAGE_STYLE,DEFAULT_STROKE_STYLE=null;function getDefaultStrokeStyle(){return DEFAULT_STROKE_STYLE}let DEFAULT_TEXT_STROKE_STYLE,DEFAULT_TEXT_STYLE=null;function getDefaultTextStyle(){return DEFAULT_TEXT_STYLE}let DEFAULT_STYLE=null;function getDefaultStyle(){return DEFAULT_STYLE}let DEFAULT_STYLE_ARRAY=null;function getDefaultStyleArray(){return DEFAULT_STYLE_ARRAY}function scaleForSize(e){return 32/Math.min(e[0],e[1])}function createStyleDefaults(){DEFAULT_COLOR=[255,255,255,1],DEFAULT_FILL_STYLE=new Fill({color:DEFAULT_COLOR}),DEFAULT_IMAGE_STYLE_ANCHOR=[20,2],DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS="pixels",DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS="pixels",DEFAULT_IMAGE_STYLE_SIZE=[64,64],DEFAULT_IMAGE_STYLE_SRC="https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png",DEFAULT_IMAGE_STYLE=new Icon({anchor:DEFAULT_IMAGE_STYLE_ANCHOR,anchorOrigin:"bottom-left",anchorXUnits:DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,anchorYUnits:DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,crossOrigin:"anonymous",rotation:0,scale:scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),size:DEFAULT_IMAGE_STYLE_SIZE,src:DEFAULT_IMAGE_STYLE_SRC}),DEFAULT_NO_IMAGE_STYLE="NO_IMAGE",DEFAULT_STROKE_STYLE=new Stroke({color:DEFAULT_COLOR,width:1}),DEFAULT_TEXT_STROKE_STYLE=new Stroke({color:[51,51,51,1],width:2}),DEFAULT_TEXT_STYLE=new Text({font:"bold 16px Helvetica",fill:DEFAULT_FILL_STYLE,stroke:DEFAULT_TEXT_STROKE_STYLE,scale:.8}),DEFAULT_STYLE=new Style({fill:DEFAULT_FILL_STYLE,image:DEFAULT_IMAGE_STYLE,text:DEFAULT_TEXT_STYLE,stroke:DEFAULT_STROKE_STYLE,zIndex:0}),DEFAULT_STYLE_ARRAY=[DEFAULT_STYLE]}let TEXTAREA;function defaultIconUrlFunction(e){return e}class KML extends XMLFeature{constructor(e){super(),e=e||{},DEFAULT_STYLE_ARRAY||createStyleDefaults(),this.dataProjection=getProjection("EPSG:4326"),this.defaultStyle_=e.defaultStyle||DEFAULT_STYLE_ARRAY,this.extractStyles_=void 0===e.extractStyles||e.extractStyles,this.writeStyles_=void 0===e.writeStyles||e.writeStyles,this.sharedStyles_={},this.showPointNames_=void 0===e.showPointNames||e.showPointNames,this.crossOrigin_=void 0!==e.crossOrigin?e.crossOrigin:"anonymous",this.iconUrlFunction_=e.iconUrlFunction||defaultIconUrlFunction,this.supportedMediaTypes=["application/vnd.google-earth.kml+xml"]}readDocumentOrFolder_(e,t){var r=makeStructureNS(NAMESPACE_URIS,{Document:makeArrayExtender(this.readDocumentOrFolder_,this),Folder:makeArrayExtender(this.readDocumentOrFolder_,this),Placemark:makeArrayPusher(this.readPlacemark_,this),Style:this.readSharedStyle_.bind(this),StyleMap:this.readSharedStyleMap_.bind(this)}),r=pushParseAndPop([],r,e,t,this);if(r)return r}readPlacemark_(e,t){const r=pushParseAndPop({geometry:null},PLACEMARK_PARSERS,e,t,this);if(r){const o=new Feature;var e=e.getAttribute("id"),e=(null!==e&&o.setId(e),t[0]),t=r.geometry;return t&&transformGeometryWithOptions(t,!1,e),o.setGeometry(t),delete r.geometry,this.extractStyles_&&(e=createFeatureStyleFunction(r.Style,r.styleUrl,this.defaultStyle_,this.sharedStyles_,this.showPointNames_),o.setStyle(e)),delete r.Style,o.setProperties(r,!0),o}}readSharedStyle_(r,o){var n=r.getAttribute("id");if(null!==n){o=readStyle.call(this,r,o);if(o){let e,t=r.baseURI;t&&"about:blank"!=t||(t=window.location.href),e=t?new URL("#"+n,t).href:"#"+n,this.sharedStyles_[e]=o}}}readSharedStyleMap_(r,o){var n=r.getAttribute("id");if(null!==n){o=readStyleMapValue.call(this,r,o);if(o){let e,t=r.baseURI;t&&"about:blank"!=t||(t=window.location.href),e=t?new URL("#"+n,t).href:"#"+n,this.sharedStyles_[e]=o}}}readFeatureFromNode(e,t){if(!NAMESPACE_URIS.includes(e.namespaceURI))return null;e=this.readPlacemark_(e,[this.getReadOptions(e,t)]);return e||null}readFeaturesFromNode(t,r){if(!NAMESPACE_URIS.includes(t.namespaceURI))return[];let o;var e,n=t.localName;if("Document"==n||"Folder"==n)return(o=this.readDocumentOrFolder_(t,[this.getReadOptions(t,r)]))?o:[];if("Placemark"==n)return(e=this.readPlacemark_(t,[this.getReadOptions(t,r)]))?[e]:[];if("kml"!=n)return[];o=[];for(let e=t.firstElementChild;e;e=e.nextElementSibling){var a=this.readFeaturesFromNode(e,r);a&&extend(o,a)}return o}readName(e){var t;if(e)return"string"==typeof e?(t=parse(e),this.readNameFromDocument(t)):isDocument(e)?this.readNameFromDocument(e):this.readNameFromNode(e)}readNameFromDocument(t){for(let e=t.firstChild;e;e=e.nextSibling)if(e.nodeType==Node.ELEMENT_NODE){var r=this.readNameFromNode(e);if(r)return r}}readNameFromNode(t){for(let e=t.firstElementChild;e;e=e.nextElementSibling)if(NAMESPACE_URIS.includes(e.namespaceURI)&&"name"==e.localName)return readString(e);for(let e=t.firstElementChild;e;e=e.nextElementSibling){var r=e.localName;if(NAMESPACE_URIS.includes(e.namespaceURI)&&("Document"==r||"Folder"==r||"Placemark"==r||"kml"==r)){r=this.readNameFromNode(e);if(r)return r}}}readNetworkLinks(e){var t,r=[];return"string"==typeof e?(t=parse(e),extend(r,this.readNetworkLinksFromDocument(t))):isDocument(e)?extend(r,this.readNetworkLinksFromDocument(e)):extend(r,this.readNetworkLinksFromNode(e)),r}readNetworkLinksFromDocument(t){var r=[];for(let e=t.firstChild;e;e=e.nextSibling)e.nodeType==Node.ELEMENT_NODE&&extend(r,this.readNetworkLinksFromNode(e));return r}readNetworkLinksFromNode(t){const r=[];for(let e=t.firstElementChild;e;e=e.nextElementSibling){var o;NAMESPACE_URIS.includes(e.namespaceURI)&&"NetworkLink"==e.localName&&(o=pushParseAndPop({},NETWORK_LINK_PARSERS,e,[]),r.push(o))}for(let e=t.firstElementChild;e;e=e.nextElementSibling){var n=e.localName;!NAMESPACE_URIS.includes(e.namespaceURI)||"Document"!=n&&"Folder"!=n&&"kml"!=n||extend(r,this.readNetworkLinksFromNode(e))}return r}readRegion(e){var t,r=[];return"string"==typeof e?(t=parse(e),extend(r,this.readRegionFromDocument(t))):isDocument(e)?extend(r,this.readRegionFromDocument(e)):extend(r,this.readRegionFromNode(e)),r}readRegionFromDocument(t){var r=[];for(let e=t.firstChild;e;e=e.nextSibling)e.nodeType==Node.ELEMENT_NODE&&extend(r,this.readRegionFromNode(e));return r}readRegionFromNode(t){const r=[];for(let e=t.firstElementChild;e;e=e.nextElementSibling){var o;NAMESPACE_URIS.includes(e.namespaceURI)&&"Region"==e.localName&&(o=pushParseAndPop({},REGION_PARSERS,e,[]),r.push(o))}for(let e=t.firstElementChild;e;e=e.nextElementSibling){var n=e.localName;!NAMESPACE_URIS.includes(e.namespaceURI)||"Document"!=n&&"Folder"!=n&&"kml"!=n||extend(r,this.readRegionFromNode(e))}return r}readCamera(e){var t,r=[];return"string"==typeof e?(t=parse(e),extend(r,this.readCameraFromDocument(t))):isDocument(e)?extend(r,this.readCameraFromDocument(e)):extend(r,this.readCameraFromNode(e)),r}readCameraFromDocument(t){var r=[];for(let e=t.firstChild;e;e=e.nextSibling)e.nodeType===Node.ELEMENT_NODE&&extend(r,this.readCameraFromNode(e));return r}readCameraFromNode(t){const r=[];for(let e=t.firstElementChild;e;e=e.nextElementSibling){var o;NAMESPACE_URIS.includes(e.namespaceURI)&&"Camera"===e.localName&&(o=pushParseAndPop({},CAMERA_PARSERS,e,[]),r.push(o))}for(let e=t.firstElementChild;e;e=e.nextElementSibling){var n=e.localName;!NAMESPACE_URIS.includes(e.namespaceURI)||"Document"!==n&&"Folder"!==n&&"Placemark"!==n&&"kml"!==n||extend(r,this.readCameraFromNode(e))}return r}writeFeaturesNode(e,t){t=this.adaptOptions(t);const r=createElementNS(NAMESPACE_URIS[4],"kml");var o="http://www.w3.org/2000/xmlns/",o=(r.setAttributeNS(o,"xmlns:gx",GX_NAMESPACE_URIS[0]),r.setAttributeNS(o,"xmlns:xsi",XML_SCHEMA_INSTANCE_URI),r.setAttributeNS(XML_SCHEMA_INSTANCE_URI,"xsi:schemaLocation",SCHEMA_LOCATION),{node:r});const n={};1<e.length?n.Document=e:1==e.length&&(n.Placemark=e[0]);var e=KML_SEQUENCE[r.namespaceURI],a=makeSequence(n,e);return pushSerializeAndPop(o,KML_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,a,[t],e,this),r}}function createNameStyleFunction(e,t){const r=[0,0];let o="start";const n=e.getImage();var a,i,l;n&&(a=n.getSize())&&2==a.length&&(i=n.getScaleArray(),l=n.getAnchor(),r[0]=i[0]*(a[0]-l[0]),r[1]=i[1]*(a[1]/2-l[1]),o="left");let S=e.getText();return S?((S=S.clone()).setFont(S.getFont()||DEFAULT_TEXT_STYLE.getFont()),S.setScale(S.getScale()||DEFAULT_TEXT_STYLE.getScale()),S.setFill(S.getFill()||DEFAULT_TEXT_STYLE.getFill()),S.setStroke(S.getStroke()||DEFAULT_TEXT_STROKE_STYLE)):S=DEFAULT_TEXT_STYLE.clone(),S.setText(t),S.setOffsetX(r[0]),S.setOffsetY(r[1]),S.setTextAlign(o),new Style({image:n,text:S})}function createFeatureStyleFunction(s,d,A,c,m){return function(e,t){let r=m,o="",n=[];if(r){const l=e.getGeometry();var a;l&&(r=l instanceof GeometryCollection?0<(n=l.getGeometriesArrayRecursive().filter(function(e){e=e.getType();return"Point"===e||"MultiPoint"===e})).length:"Point"===(a=l.getType())||"MultiPoint"===a)}r&&(o=e.get("name"),(r=r&&!!o)&&/&[^&]+;/.test(o)&&((TEXTAREA=TEXTAREA||document.createElement("textarea")).innerHTML=o,o=TEXTAREA.value));let i=A;if(s?i=s:d&&(i=findStyle(d,A,c)),r){const S=createNameStyleFunction(i[0],o);if(0<n.length){S.setGeometry(new GeometryCollection(n));const E=new Style({geometry:i[0].getGeometry(),image:null,fill:i[0].getFill(),stroke:i[0].getStroke(),text:null});return[S,E].concat(i.slice(1))}return S}return i}}function findStyle(e,t,r){return Array.isArray(e)?e:"string"==typeof e?findStyle(r[e],t,r):t}function readColor(e){e=getAllTextContent(e,!1),e=/^\s*#?\s*([0-9A-Fa-f]{8})\s*$/.exec(e);if(e){const t=e[1];return[parseInt(t.substr(6,2),16),parseInt(t.substr(4,2),16),parseInt(t.substr(2,2),16),parseInt(t.substr(0,2),16)/255]}}function readFlatCoordinates(e){let t=getAllTextContent(e,!1);const r=[],o=(t=t.replace(/\s*,\s*/g,","),/^\s*([+\-]?\d*\.?\d+(?:e[+\-]?\d+)?),([+\-]?\d*\.?\d+(?:e[+\-]?\d+)?)(?:\s+|,|$)(?:([+\-]?\d*\.?\d+(?:e[+\-]?\d+)?)(?:\s+|$))?\s*/i);for(var n;n=o.exec(t);){var a=parseFloat(n[1]),i=parseFloat(n[2]),l=n[3]?parseFloat(n[3]):0;r.push(a,i,l),t=t.substr(n[0].length)}if(""===t)return r}function readURI(e){var t=getAllTextContent(e,!1).trim();let r=e.baseURI;return(r=r&&"about:blank"!=r?r:window.location.href)?new URL(t,r).href:t}function readStyleURL(e){var t=getAllTextContent(e,!1).trim().replace(/^(?!.*#)/,"#");let r=e.baseURI;return(r=r&&"about:blank"!=r?r:window.location.href)?new URL(t,r).href:t}function readVec2(e){var t=e.getAttribute("xunits"),r=e.getAttribute("yunits");let o;return o="insetPixels"!==t?"insetPixels"!==r?"bottom-left":"top-left":"insetPixels"!==r?"bottom-right":"top-right",{x:parseFloat(e.getAttribute("x")),xunits:ICON_ANCHOR_UNITS_MAP[t],y:parseFloat(e.getAttribute("y")),yunits:ICON_ANCHOR_UNITS_MAP[r],origin:o}}function readScale(e){return readDecimal(e)}const STYLE_MAP_PARSERS=makeStructureNS(NAMESPACE_URIS,{Pair:pairDataParser});function readStyleMapValue(e,t){return pushParseAndPop(void 0,STYLE_MAP_PARSERS,e,t,this)}const ICON_STYLE_PARSERS=makeStructureNS(NAMESPACE_URIS,{Icon:makeObjectPropertySetter(readIcon),color:makeObjectPropertySetter(readColor),heading:makeObjectPropertySetter(readDecimal),hotSpot:makeObjectPropertySetter(readVec2),scale:makeObjectPropertySetter(readScale)});function iconStyleParser(S,E){S=pushParseAndPop({},ICON_STYLE_PARSERS,S,E);if(S){const c=E[E.length-1];var E="Icon"in S?S.Icon:{},s=!("Icon"in S)||0<Object.keys(E).length;let e;var d=E.href;d?e=d:s&&(e=DEFAULT_IMAGE_STYLE_SRC);let t,r,o,n="bottom-left";d=S.hotSpot;d?(t=[d.x,d.y],r=d.xunits,o=d.yunits,n=d.origin):/^https?:\/\/maps\.(?:google|gstatic)\.com\//.test(e)&&(e.includes("pushpin")?(t=DEFAULT_IMAGE_STYLE_ANCHOR,r=DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,o=DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS):e.includes("arrow-reverse")?(t=[54,42],r=DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,o=DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS):e.includes("paddle")&&(t=[32,1],r=DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,o=DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS));let a;var d=E.x,A=E.y;void 0!==d&&void 0!==A&&(a=[d,A]);let i;d=E.w,A=E.h;void 0!==d&&void 0!==A&&(i=[d,A]);let l;E=S.heading,d=(void 0!==E&&(l=toRadians(E)),S.scale),A=S.color;if(s){e==DEFAULT_IMAGE_STYLE_SRC&&(i=DEFAULT_IMAGE_STYLE_SIZE);const m=new Icon({anchor:t,anchorOrigin:n,anchorXUnits:r,anchorYUnits:o,crossOrigin:this.crossOrigin_,offset:a,offsetOrigin:"bottom-left",rotation:l,scale:d,size:i,src:this.iconUrlFunction_(e),color:A}),u=m.getScaleArray()[0];E=m.getSize();if(null===E){S=m.getImageState();if(S===ImageState.IDLE||S===ImageState.LOADING){const _=function(){var e=m.getImageState();e!==ImageState.IDLE&&e!==ImageState.LOADING&&((e=m.getSize())&&2==e.length&&(e=scaleForSize(e),m.setScale(u*e)),m.unlistenImageChange(_))};m.listenImageChange(_),S===ImageState.IDLE&&m.load()}}else 2==E.length&&(s=scaleForSize(E),m.setScale(u*s));c.imageStyle=m}else c.imageStyle=DEFAULT_NO_IMAGE_STYLE}}const LABEL_STYLE_PARSERS=makeStructureNS(NAMESPACE_URIS,{color:makeObjectPropertySetter(readColor),scale:makeObjectPropertySetter(readScale)});function labelStyleParser(e,t){e=pushParseAndPop({},LABEL_STYLE_PARSERS,e,t);if(e){const r=t[t.length-1];t=new Text({fill:new Fill({color:"color"in e?e.color:DEFAULT_COLOR}),scale:e.scale});r.textStyle=t}}const LINE_STYLE_PARSERS=makeStructureNS(NAMESPACE_URIS,{color:makeObjectPropertySetter(readColor),width:makeObjectPropertySetter(readDecimal)});function lineStyleParser(e,t){e=pushParseAndPop({},LINE_STYLE_PARSERS,e,t);if(e){const r=t[t.length-1];t=new Stroke({color:"color"in e?e.color:DEFAULT_COLOR,width:"width"in e?e.width:1});r.strokeStyle=t}}const POLY_STYLE_PARSERS=makeStructureNS(NAMESPACE_URIS,{color:makeObjectPropertySetter(readColor),fill:makeObjectPropertySetter(readBoolean),outline:makeObjectPropertySetter(readBoolean)});function polyStyleParser(e,t){e=pushParseAndPop({},POLY_STYLE_PARSERS,e,t);if(e){const r=t[t.length-1];t=new Fill({color:"color"in e?e.color:DEFAULT_COLOR}),t=(r.fillStyle=t,e.fill),t=(void 0!==t&&(r.fill=t),e.outline);void 0!==t&&(r.outline=t)}}const FLAT_LINEAR_RING_PARSERS=makeStructureNS(NAMESPACE_URIS,{coordinates:makeReplacer(readFlatCoordinates)});function readFlatLinearRing(e,t){return pushParseAndPop(null,FLAT_LINEAR_RING_PARSERS,e,t)}function gxCoordParser(e,t){const r=t[t.length-1].coordinates;var o,t=getAllTextContent(e,!1),e=/^\s*([+\-]?\d+(?:\.\d*)?(?:e[+\-]?\d*)?)\s+([+\-]?\d+(?:\.\d*)?(?:e[+\-]?\d*)?)\s+([+\-]?\d+(?:\.\d*)?(?:e[+\-]?\d*)?)\s*$/i.exec(t);e?(t=parseFloat(e[1]),o=parseFloat(e[2]),e=parseFloat(e[3]),r.push([t,o,e])):r.push([])}const GX_MULTITRACK_GEOMETRY_PARSERS=makeStructureNS(GX_NAMESPACE_URIS,{Track:makeArrayPusher(readGxTrack)});function readGxMultiTrack(e,t){e=pushParseAndPop([],GX_MULTITRACK_GEOMETRY_PARSERS,e,t);if(e)return new MultiLineString(e)}const GX_TRACK_PARSERS=makeStructureNS(NAMESPACE_URIS,{when:whenParser},makeStructureNS(GX_NAMESPACE_URIS,{coord:gxCoordParser}));function readGxTrack(e,t){e=pushParseAndPop({coordinates:[],whens:[]},GX_TRACK_PARSERS,e,t);if(e){const n=[];var r=e.coordinates,o=e.whens;for(let e=0,t=Math.min(r.length,o.length);e<t;++e)3==r[e].length&&n.push(r[e][0],r[e][1],r[e][2],o[e]);return new LineString(n,"XYZM")}}const ICON_PARSERS=makeStructureNS(NAMESPACE_URIS,{href:makeObjectPropertySetter(readURI)},makeStructureNS(GX_NAMESPACE_URIS,{x:makeObjectPropertySetter(readDecimal),y:makeObjectPropertySetter(readDecimal),w:makeObjectPropertySetter(readDecimal),h:makeObjectPropertySetter(readDecimal)}));function readIcon(e,t){e=pushParseAndPop({},ICON_PARSERS,e,t);return e||null}const GEOMETRY_FLAT_COORDINATES_PARSERS=makeStructureNS(NAMESPACE_URIS,{coordinates:makeReplacer(readFlatCoordinates)});function readFlatCoordinatesFromNode(e,t){return pushParseAndPop(null,GEOMETRY_FLAT_COORDINATES_PARSERS,e,t)}const EXTRUDE_AND_ALTITUDE_MODE_PARSERS=makeStructureNS(NAMESPACE_URIS,{extrude:makeObjectPropertySetter(readBoolean),tessellate:makeObjectPropertySetter(readBoolean),altitudeMode:makeObjectPropertySetter(readString)});function readLineString(e,t){var r=pushParseAndPop({},EXTRUDE_AND_ALTITUDE_MODE_PARSERS,e,t),e=readFlatCoordinatesFromNode(e,t);if(e){const o=new LineString(e,"XYZ");return o.setProperties(r,!0),o}}function readLinearRing(e,t){var r=pushParseAndPop({},EXTRUDE_AND_ALTITUDE_MODE_PARSERS,e,t),e=readFlatCoordinatesFromNode(e,t);if(e){const o=new Polygon(e,"XYZ",[e.length]);return o.setProperties(r,!0),o}}const MULTI_GEOMETRY_PARSERS=makeStructureNS(NAMESPACE_URIS,{LineString:makeArrayPusher(readLineString),LinearRing:makeArrayPusher(readLinearRing),MultiGeometry:makeArrayPusher(readMultiGeometry),Point:makeArrayPusher(readPoint),Polygon:makeArrayPusher(readPolygon)});function readMultiGeometry(e,t){const r=pushParseAndPop([],MULTI_GEOMETRY_PARSERS,e,t);if(!r)return null;if(0===r.length)return new GeometryCollection(r);let o,n=!0;var a,i=r[0].getType();let l;for(let e=1,t=r.length;e<t;++e)if((l=r[e]).getType()!=i){n=!1;break}if(n)if("Point"==i){const S=r[0];e=S.getLayout(),a=S.getFlatCoordinates();for(let e=1,t=r.length;e<t;++e)l=r[e],extend(a,l.getFlatCoordinates());setCommonGeometryProperties(o=new MultiPoint(a,e),r)}else if("LineString"==i)setCommonGeometryProperties(o=new MultiLineString(r),r);else if("Polygon"==i)setCommonGeometryProperties(o=new MultiPolygon(r),r);else{if("GeometryCollection"!=i)throw new Error("Unknown geometry type found");o=new GeometryCollection(r)}else o=new GeometryCollection(r);return o}function readPoint(e,t){var r=pushParseAndPop({},EXTRUDE_AND_ALTITUDE_MODE_PARSERS,e,t),e=readFlatCoordinatesFromNode(e,t);if(e){const o=new Point(e,"XYZ");return o.setProperties(r,!0),o}}const FLAT_LINEAR_RINGS_PARSERS=makeStructureNS(NAMESPACE_URIS,{innerBoundaryIs:innerBoundaryIsParser,outerBoundaryIs:outerBoundaryIsParser});function readPolygon(e,t){var r=pushParseAndPop({},EXTRUDE_AND_ALTITUDE_MODE_PARSERS,e,t),o=pushParseAndPop([null],FLAT_LINEAR_RINGS_PARSERS,e,t);if(o&&o[0]){var n=o[0];const a=[n.length];for(let e=1,t=o.length;e<t;++e)extend(n,o[e]),a.push(n.length);const i=new Polygon(n,"XYZ",a);return i.setProperties(r,!0),i}}const STYLE_PARSERS=makeStructureNS(NAMESPACE_URIS,{IconStyle:iconStyleParser,LabelStyle:labelStyleParser,LineStyle:lineStyleParser,PolyStyle:polyStyleParser});function readStyle(e,t){e=pushParseAndPop({},STYLE_PARSERS,e,t,this);if(!e)return null;let r="fillStyle"in e?e.fillStyle:DEFAULT_FILL_STYLE;t=e.fill;void 0===t||t||(r=null);let o;"imageStyle"in e?e.imageStyle!=DEFAULT_NO_IMAGE_STYLE&&(o=e.imageStyle):o=DEFAULT_IMAGE_STYLE;var t="textStyle"in e?e.textStyle:DEFAULT_TEXT_STYLE,n="strokeStyle"in e?e.strokeStyle:DEFAULT_STROKE_STYLE,e=e.outline;return void 0===e||e?[new Style({fill:r,image:o,stroke:n,text:t,zIndex:void 0})]:[new Style({geometry:function(e){const t=e.getGeometry();e=t.getType();if("GeometryCollection"===e){const r=t;return new GeometryCollection(r.getGeometriesArrayRecursive().filter(function(e){e=e.getType();return"Polygon"!==e&&"MultiPolygon"!==e}))}if("Polygon"!==e&&"MultiPolygon"!==e)return t},fill:r,image:o,stroke:n,text:t,zIndex:void 0}),new Style({geometry:function(e){const t=e.getGeometry();e=t.getType();if("GeometryCollection"===e){const r=t;return new GeometryCollection(r.getGeometriesArrayRecursive().filter(function(e){e=e.getType();return"Polygon"===e||"MultiPolygon"===e}))}if("Polygon"===e||"MultiPolygon"===e)return t},fill:r,stroke:null,zIndex:void 0})]}function setCommonGeometryProperties(e,t){var r=t.length;const o=new Array(t.length),n=new Array(t.length),a=new Array(t.length);let i,l,S;i=!1,l=!1,S=!1;for(let e=0;e<r;++e){const E=t[e];o[e]=E.get("extrude"),n[e]=E.get("tessellate"),a[e]=E.get("altitudeMode"),i=i||void 0!==o[e],l=l||void 0!==n[e],S=S||a[e]}i&&e.set("extrude",o),l&&e.set("tessellate",n),S&&e.set("altitudeMode",a)}const DATA_PARSERS=makeStructureNS(NAMESPACE_URIS,{displayName:makeObjectPropertySetter(readString),value:makeObjectPropertySetter(readString)});function dataParser(e,t){var r=e.getAttribute("name");parseNode(DATA_PARSERS,e,t);const o=t[t.length-1];r&&o.displayName?o[r]={value:o.value,displayName:o.displayName,toString:function(){return o.value}}:null!==r?o[r]=o.value:null!==o.displayName&&(o[o.displayName]=o.value),delete o.value}const EXTENDED_DATA_PARSERS=makeStructureNS(NAMESPACE_URIS,{Data:dataParser,SchemaData:schemaDataParser});function extendedDataParser(e,t){parseNode(EXTENDED_DATA_PARSERS,e,t)}function regionParser(e,t){parseNode(REGION_PARSERS,e,t)}const PAIR_PARSERS=makeStructureNS(NAMESPACE_URIS,{Style:makeObjectPropertySetter(readStyle),key:makeObjectPropertySetter(readString),styleUrl:makeObjectPropertySetter(readStyleURL)});function pairDataParser(e,t){var r,e=pushParseAndPop({},PAIR_PARSERS,e,t,this);!e||(r=e.key)&&"normal"==r&&((r=e.styleUrl)&&(t[t.length-1]=r),(r=e.Style)&&(t[t.length-1]=r))}function placemarkStyleMapParser(e,t){e=readStyleMapValue.call(this,e,t);if(e){const r=t[t.length-1];if(Array.isArray(e))r.Style=e;else{if("string"!=typeof e)throw new Error("`styleMapValue` has an unknown type");r.styleUrl=e}}}const SCHEMA_DATA_PARSERS=makeStructureNS(NAMESPACE_URIS,{SimpleData:simpleDataParser});function schemaDataParser(e,t){parseNode(SCHEMA_DATA_PARSERS,e,t)}function simpleDataParser(e,t){var r=e.getAttribute("name");if(null!==r){e=readString(e);const o=t[t.length-1];o[r]=e}}const LAT_LON_ALT_BOX_PARSERS=makeStructureNS(NAMESPACE_URIS,{altitudeMode:makeObjectPropertySetter(readString),minAltitude:makeObjectPropertySetter(readDecimal),maxAltitude:makeObjectPropertySetter(readDecimal),north:makeObjectPropertySetter(readDecimal),south:makeObjectPropertySetter(readDecimal),east:makeObjectPropertySetter(readDecimal),west:makeObjectPropertySetter(readDecimal)});function latLonAltBoxParser(e,t){e=pushParseAndPop({},LAT_LON_ALT_BOX_PARSERS,e,t);if(e){const r=t[t.length-1];t=[parseFloat(e.west),parseFloat(e.south),parseFloat(e.east),parseFloat(e.north)];r.extent=t,r.altitudeMode=e.altitudeMode,r.minAltitude=parseFloat(e.minAltitude),r.maxAltitude=parseFloat(e.maxAltitude)}}const LOD_PARSERS=makeStructureNS(NAMESPACE_URIS,{minLodPixels:makeObjectPropertySetter(readDecimal),maxLodPixels:makeObjectPropertySetter(readDecimal),minFadeExtent:makeObjectPropertySetter(readDecimal),maxFadeExtent:makeObjectPropertySetter(readDecimal)});function lodParser(e,t){e=pushParseAndPop({},LOD_PARSERS,e,t);if(e){const r=t[t.length-1];r.minLodPixels=parseFloat(e.minLodPixels),r.maxLodPixels=parseFloat(e.maxLodPixels),r.minFadeExtent=parseFloat(e.minFadeExtent),r.maxFadeExtent=parseFloat(e.maxFadeExtent)}}const INNER_BOUNDARY_IS_PARSERS=makeStructureNS(NAMESPACE_URIS,{LinearRing:makeArrayPusher(readFlatLinearRing)});function innerBoundaryIsParser(e,t){e=pushParseAndPop([],INNER_BOUNDARY_IS_PARSERS,e,t);if(0<e.length){const r=t[t.length-1];r.push(...e)}}const OUTER_BOUNDARY_IS_PARSERS=makeStructureNS(NAMESPACE_URIS,{LinearRing:makeReplacer(readFlatLinearRing)});function outerBoundaryIsParser(e,t){e=pushParseAndPop(void 0,OUTER_BOUNDARY_IS_PARSERS,e,t);if(e){const r=t[t.length-1];r[0]=e}}function linkParser(e,t){parseNode(LINK_PARSERS,e,t)}function whenParser(e,t){const r=t[t.length-1].whens;t=getAllTextContent(e,!1),e=Date.parse(t);r.push(isNaN(e)?0:e)}function writeColorTextNode(e,t){t=asArray(t);const r=[255*(4==t.length?t[3]:1),t[2],t[1],t[0]];for(let e=0;e<4;++e){var o=Math.floor(r[e]).toString(16);r[e]=1==o.length?"0"+o:o}writeStringTextNode(e,r.join(""))}function writeCoordinatesTextNode(e,r,t){var t=t[t.length-1],o=t.layout,n=t.stride;let a;if("XY"==o||"XYM"==o)a=2;else{if("XYZ"!=o&&"XYZM"!=o)throw new Error("Invalid geometry layout");a=3}var i=r.length;let l="";if(0<i){l+=r[0];for(let e=1;e<a;++e)l+=","+r[e];for(let t=n;t<i;t+=n){l+=" "+r[t];for(let e=1;e<a;++e)l+=","+r[t+e]}}writeStringTextNode(e,l)}const EXTENDEDDATA_NODE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{Data:makeChildAppender(writeDataNode),value:makeChildAppender(writeDataNodeValue),displayName:makeChildAppender(writeDataNodeName)});function writeDataNode(e,t,r){e.setAttribute("name",t.name);e={node:e},t=t.value;"object"==typeof t?(null!==t&&t.displayName&&pushSerializeAndPop(e,EXTENDEDDATA_NODE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,[t.displayName],r,["displayName"]),null!==t&&t.value&&pushSerializeAndPop(e,EXTENDEDDATA_NODE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,[t.value],r,["value"])):pushSerializeAndPop(e,EXTENDEDDATA_NODE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,[t],r,["value"])}function writeDataNodeName(e,t){writeCDATASection(e,t)}function writeDataNodeValue(e,t){writeStringTextNode(e,t)}const DOCUMENT_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{Placemark:makeChildAppender(writePlacemark)}),DOCUMENT_NODE_FACTORY=function(e,t,r){t=t[t.length-1].node;return createElementNS(t.namespaceURI,"Placemark")};function writeDocument(e,t,r){pushSerializeAndPop({node:e},DOCUMENT_SERIALIZERS,DOCUMENT_NODE_FACTORY,t,r,void 0,this)}const DATA_NODE_FACTORY=makeSimpleNodeFactory("Data");function writeExtendedData(e,t,r){var o={node:e},n=t.names,a=t.values,i=n.length;for(let e=0;e<i;e++)pushSerializeAndPop(o,EXTENDEDDATA_NODE_SERIALIZERS,DATA_NODE_FACTORY,[{name:n[e],value:a[e]}],r)}const ICON_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["href"],makeStructureNS(GX_NAMESPACE_URIS,["x","y","w","h"])),ICON_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{href:makeChildAppender(writeStringTextNode)},makeStructureNS(GX_NAMESPACE_URIS,{x:makeChildAppender(writeDecimalTextNode),y:makeChildAppender(writeDecimalTextNode),w:makeChildAppender(writeDecimalTextNode),h:makeChildAppender(writeDecimalTextNode)})),GX_NODE_FACTORY=function(e,t,r){return createElementNS(GX_NAMESPACE_URIS[0],"gx:"+r)};function writeIcon(e,t,r){var e={node:e},o=r[r.length-1].node,o=ICON_SEQUENCE[o.namespaceURI],n=makeSequence(t,o);pushSerializeAndPop(e,ICON_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,n,r,o),o=ICON_SEQUENCE[GX_NAMESPACE_URIS[0]],n=makeSequence(t,o),pushSerializeAndPop(e,ICON_SERIALIZERS,GX_NODE_FACTORY,n,r,o)}const ICON_STYLE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["scale","heading","Icon","color","hotSpot"]),ICON_STYLE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{Icon:makeChildAppender(writeIcon),color:makeChildAppender(writeColorTextNode),heading:makeChildAppender(writeDecimalTextNode),hotSpot:makeChildAppender(writeVec2),scale:makeChildAppender(writeScaleTextNode)});function writeIconStyle(e,t,r){e={node:e};const o={};var n=t.getSrc(),a=t.getSize(),i=t.getImageSize();const l={href:n};a&&(l.w=a[0],l.h=a[1],n=t.getAnchor(),(s=t.getOrigin())&&i&&0!==s[0]&&s[1]!==a[1]&&(l.x=s[0],l.y=i[1]-(s[1]+a[1])),!n||n[0]===a[0]/2&&n[1]===a[1]/2||(i={x:n[0],xunits:"pixels",y:a[1]-n[1],yunits:"pixels"},o.hotSpot=i)),o.Icon=l;let S=t.getScaleArray()[0],E=a;2==(E=null===E?DEFAULT_IMAGE_STYLE_SIZE:E).length&&(s=scaleForSize(E),S/=s),1!==S&&(o.scale=S);var n=t.getRotation(),i=(0!==n&&(o.heading=n),t.getColor()),a=(i&&(o.color=i),r[r.length-1].node),s=ICON_STYLE_SEQUENCE[a.namespaceURI],n=makeSequence(o,s);pushSerializeAndPop(e,ICON_STYLE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,n,r,s)}const LABEL_STYLE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["color","scale"]),LABEL_STYLE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{color:makeChildAppender(writeColorTextNode),scale:makeChildAppender(writeScaleTextNode)});function writeLabelStyle(e,t,r){e={node:e};const o={},n=t.getFill();n&&(o.color=n.getColor());var t=t.getScale(),t=(t&&1!==t&&(o.scale=t),r[r.length-1].node),t=LABEL_STYLE_SEQUENCE[t.namespaceURI],a=makeSequence(o,t);pushSerializeAndPop(e,LABEL_STYLE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,a,r,t)}const LINE_STYLE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["color","width"]),LINE_STYLE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{color:makeChildAppender(writeColorTextNode),width:makeChildAppender(writeDecimalTextNode)});function writeLineStyle(e,t,r){var e={node:e},t={color:t.getColor(),width:Number(t.getWidth())||1},o=r[r.length-1].node,o=LINE_STYLE_SEQUENCE[o.namespaceURI],t=makeSequence(t,o);pushSerializeAndPop(e,LINE_STYLE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,t,r,o)}const GEOMETRY_TYPE_TO_NODENAME={Point:"Point",LineString:"LineString",LinearRing:"LinearRing",Polygon:"Polygon",MultiPoint:"MultiGeometry",MultiLineString:"MultiGeometry",MultiPolygon:"MultiGeometry",GeometryCollection:"MultiGeometry"},GEOMETRY_NODE_FACTORY=function(e,t,r){if(e)return t=t[t.length-1].node,createElementNS(t.namespaceURI,GEOMETRY_TYPE_TO_NODENAME[e.getType()])},POINT_NODE_FACTORY=makeSimpleNodeFactory("Point"),LINE_STRING_NODE_FACTORY=makeSimpleNodeFactory("LineString"),LINEAR_RING_NODE_FACTORY=makeSimpleNodeFactory("LinearRing"),POLYGON_NODE_FACTORY=makeSimpleNodeFactory("Polygon"),MULTI_GEOMETRY_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{LineString:makeChildAppender(writePrimitiveGeometry),Point:makeChildAppender(writePrimitiveGeometry),Polygon:makeChildAppender(writePolygon),GeometryCollection:makeChildAppender(writeMultiGeometry)});function writeMultiGeometry(e,t,r){var e={node:e},o=t.getType();let n=[],a;if("GeometryCollection"===o)t.getGeometriesArrayRecursive().forEach(function(e){var t=e.getType();if("MultiPoint"===t)n=n.concat(e.getPoints());else if("MultiLineString"===t)n=n.concat(e.getLineStrings());else if("MultiPolygon"===t)n=n.concat(e.getPolygons());else{if("Point"!==t&&"LineString"!==t&&"Polygon"!==t)throw new Error("Unknown geometry type");n.push(e)}}),a=GEOMETRY_NODE_FACTORY;else if("MultiPoint"===o)n=t.getPoints(),a=POINT_NODE_FACTORY;else if("MultiLineString"===o)n=t.getLineStrings(),a=LINE_STRING_NODE_FACTORY;else{if("MultiPolygon"!==o)throw new Error("Unknown geometry type");n=t.getPolygons(),a=POLYGON_NODE_FACTORY}pushSerializeAndPop(e,MULTI_GEOMETRY_SERIALIZERS,a,n,r)}const BOUNDARY_IS_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{LinearRing:makeChildAppender(writePrimitiveGeometry)});function writeBoundaryIs(e,t,r){pushSerializeAndPop({node:e},BOUNDARY_IS_SERIALIZERS,LINEAR_RING_NODE_FACTORY,[t],r)}const PLACEMARK_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{ExtendedData:makeChildAppender(writeExtendedData),MultiGeometry:makeChildAppender(writeMultiGeometry),LineString:makeChildAppender(writePrimitiveGeometry),LinearRing:makeChildAppender(writePrimitiveGeometry),Point:makeChildAppender(writePrimitiveGeometry),Polygon:makeChildAppender(writePolygon),Style:makeChildAppender(writeStyle),address:makeChildAppender(writeStringTextNode),description:makeChildAppender(writeStringTextNode),name:makeChildAppender(writeStringTextNode),open:makeChildAppender(writeBooleanTextNode),phoneNumber:makeChildAppender(writeStringTextNode),styleUrl:makeChildAppender(writeStringTextNode),visibility:makeChildAppender(writeBooleanTextNode)}),PLACEMARK_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["name","open","visibility","address","phoneNumber","description","styleUrl","Style"]),EXTENDEDDATA_NODE_FACTORY=makeSimpleNodeFactory("ExtendedData");function writePlacemark(e,o,t){var r={node:e};o.getId()&&e.setAttribute("id",o.getId());const n=o.getProperties(),a={address:1,description:1,name:1,open:1,phoneNumber:1,styleUrl:1,visibility:1};a[o.getGeometryName()]=1;e=Object.keys(n||{}).sort().filter(function(e){return!a[e]});const i=o.getStyleFunction();if(i){var l=i(o,0);if(l){const s=Array.isArray(l)?l:[l];let r=s;if(o.getGeometry()&&(r=s.filter(function(e){const t=e.getGeometryFunction()(o);if(t)return"GeometryCollection"===(e=t.getType())?t.getGeometriesArrayRecursive().filter(function(e){e=e.getType();return"Point"===e||"MultiPoint"===e}).length:"Point"===e||"MultiPoint"===e})),this.writeStyles_){let e=s,t=s;o.getGeometry()&&(e=s.filter(function(e){const t=e.getGeometryFunction()(o);if(t)return"GeometryCollection"===(e=t.getType())?t.getGeometriesArrayRecursive().filter(function(e){e=e.getType();return"LineString"===e||"MultiLineString"===e}).length:"LineString"===e||"MultiLineString"===e}),t=s.filter(function(e){const t=e.getGeometryFunction()(o);if(t)return"GeometryCollection"===(e=t.getType())?t.getGeometriesArrayRecursive().filter(function(e){e=e.getType();return"Polygon"===e||"MultiPolygon"===e}).length:"Polygon"===e||"MultiPolygon"===e})),n.Style={pointStyles:r,lineStyles:e,polyStyles:t}}if(r.length&&void 0===n.name){const d=r[0].getText();d&&(n.name=d.getText())}}}var l=t[t.length-1].node,l=PLACEMARK_SEQUENCE[l.namespaceURI],S=makeSequence(n,l),l=(pushSerializeAndPop(r,PLACEMARK_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,S,t,l),0<e.length&&(S={names:e,values:makeSequence(n,e)},pushSerializeAndPop(r,PLACEMARK_SERIALIZERS,EXTENDEDDATA_NODE_FACTORY,[S],t)),t[0]);let E=o.getGeometry();E=E&&transformGeometryWithOptions(E,!0,l),pushSerializeAndPop(r,PLACEMARK_SERIALIZERS,GEOMETRY_NODE_FACTORY,[E],t)}const PRIMITIVE_GEOMETRY_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["extrude","tessellate","altitudeMode","coordinates"]),PRIMITIVE_GEOMETRY_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{extrude:makeChildAppender(writeBooleanTextNode),tessellate:makeChildAppender(writeBooleanTextNode),altitudeMode:makeChildAppender(writeStringTextNode),coordinates:makeChildAppender(writeCoordinatesTextNode)});function writePrimitiveGeometry(e,t,r){var o=t.getFlatCoordinates();const n={node:e},a=(n.layout=t.getLayout(),n.stride=t.getStride(),t.getProperties());a.coordinates=o;e=r[r.length-1].node,t=PRIMITIVE_GEOMETRY_SEQUENCE[e.namespaceURI],o=makeSequence(a,t);pushSerializeAndPop(n,PRIMITIVE_GEOMETRY_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,o,r,t)}const POLY_STYLE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["color","fill","outline"]),POLYGON_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{outerBoundaryIs:makeChildAppender(writeBoundaryIs),innerBoundaryIs:makeChildAppender(writeBoundaryIs)}),INNER_BOUNDARY_NODE_FACTORY=makeSimpleNodeFactory("innerBoundaryIs"),OUTER_BOUNDARY_NODE_FACTORY=makeSimpleNodeFactory("outerBoundaryIs");function writePolygon(e,t,r){const o=t.getLinearRings();t=o.shift(),e={node:e};pushSerializeAndPop(e,POLYGON_SERIALIZERS,INNER_BOUNDARY_NODE_FACTORY,o,r),pushSerializeAndPop(e,POLYGON_SERIALIZERS,OUTER_BOUNDARY_NODE_FACTORY,[t],r)}const POLY_STYLE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{color:makeChildAppender(writeColorTextNode),fill:makeChildAppender(writeBooleanTextNode),outline:makeChildAppender(writeBooleanTextNode)});function writePolyStyle(e,t,r){e={node:e};const o=t.getFill();var t=t.getStroke(),t={color:o?o.getColor():void 0,fill:!!o&&void 0,outline:!!t&&void 0},n=r[r.length-1].node,n=POLY_STYLE_SEQUENCE[n.namespaceURI],t=makeSequence(t,n);pushSerializeAndPop(e,POLY_STYLE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,t,r,n)}function writeScaleTextNode(e,t){writeDecimalTextNode(e,Math.round(1e6*t)/1e6)}const STYLE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["IconStyle","LabelStyle","LineStyle","PolyStyle"]),STYLE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{IconStyle:makeChildAppender(writeIconStyle),LabelStyle:makeChildAppender(writeLabelStyle),LineStyle:makeChildAppender(writeLineStyle),PolyStyle:makeChildAppender(writePolyStyle)});function writeStyle(e,t,r){e={node:e};const o={};t.pointStyles.length&&((n=t.pointStyles[0].getText())&&(o.LabelStyle=n),(n=t.pointStyles[0].getImage())&&"function"==typeof n.getSrc&&(o.IconStyle=n)),t.lineStyles.length&&(n=t.lineStyles[0].getStroke())&&(o.LineStyle=n),t.polyStyles.length&&((n=t.polyStyles[0].getStroke())&&!o.LineStyle&&(o.LineStyle=n),o.PolyStyle=t.polyStyles[0]);var n=r[r.length-1].node,t=STYLE_SEQUENCE[n.namespaceURI],n=makeSequence(o,t);pushSerializeAndPop(e,STYLE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,n,r,t)}function writeVec2(e,t){e.setAttribute("x",String(t.x)),e.setAttribute("y",String(t.y)),e.setAttribute("xunits",t.xunits),e.setAttribute("yunits",t.yunits)}export default KML;export{getDefaultFillStyle,getDefaultImageStyle,getDefaultStrokeStyle,getDefaultTextStyle,getDefaultStyle,getDefaultStyleArray,readFlatCoordinates};