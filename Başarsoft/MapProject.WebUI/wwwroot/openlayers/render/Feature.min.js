import Feature from"../Feature.js";import{LineString,MultiLineString,MultiPoint,MultiPolygon,Point,Polygon}from"../geom.js";import{compose as composeTransform,create as createTransform}from"../transform.js";import{createOrUpdateFromCoordinate,createOrUpdateFromFlatCoordinates,getCenter,getHeight}from"../extent.js";import{douglasPeucker,douglasPeuckerArray,quantizeArray}from"../geom/flat/simplify.js";import{extend}from"../array.js";import{getInteriorPointOfArray,getInteriorPointsOfMultiArray}from"../geom/flat/interiorpoint.js";import{get as getProjection}from"../proj.js";import{inflateEnds}from"../geom/flat/orient.js";import{interpolatePoint}from"../geom/flat/interpolate.js";import{linearRingss as linearRingssCenter}from"../geom/flat/center.js";import{memoizeOne}from"../functions.js";import{transform2D}from"../geom/flat/transform.js";const tmpTransform=createTransform();class RenderFeature{constructor(t,e,r,i,o,s){this.styleFunction,this.extent_,this.id_=s,this.type_=t,this.flatCoordinates_=e,this.flatInteriorPoints_=null,this.flatMidpoints_=null,this.ends_=r||null,this.properties_=o,this.squaredTolerance_,this.stride_=i,this.simplifiedGeometry_}get(t){return this.properties_[t]}getExtent(){return this.extent_||(this.extent_="Point"===this.type_?createOrUpdateFromCoordinate(this.flatCoordinates_):createOrUpdateFromFlatCoordinates(this.flatCoordinates_,0,this.flatCoordinates_.length,2)),this.extent_}getFlatInteriorPoint(){var t;return this.flatInteriorPoints_||(t=getCenter(this.getExtent()),this.flatInteriorPoints_=getInteriorPointOfArray(this.flatCoordinates_,0,this.ends_,2,t,0)),this.flatInteriorPoints_}getFlatInteriorPoints(){var t,e;return this.flatInteriorPoints_||(t=inflateEnds(this.flatCoordinates_,this.ends_),e=linearRingssCenter(this.flatCoordinates_,0,t,2),this.flatInteriorPoints_=getInteriorPointsOfMultiArray(this.flatCoordinates_,0,t,2,e)),this.flatInteriorPoints_}getFlatMidpoint(){return this.flatMidpoints_||(this.flatMidpoints_=interpolatePoint(this.flatCoordinates_,0,this.flatCoordinates_.length,2,.5)),this.flatMidpoints_}getFlatMidpoints(){if(!this.flatMidpoints_){this.flatMidpoints_=[];var i=this.flatCoordinates_;let r=0;var o=this.ends_;for(let t=0,e=o.length;t<e;++t){var s=o[t],n=interpolatePoint(i,r,s,2,.5);extend(this.flatMidpoints_,n),r=s}}return this.flatMidpoints_}getId(){return this.id_}getOrientedFlatCoordinates(){return this.flatCoordinates_}getGeometry(){return this}getSimplifiedGeometry(t){return this}simplifyTransformed(t,e){return this}getProperties(){return this.properties_}getPropertiesInternal(){return this.properties_}getStride(){return this.stride_}getStyleFunction(){return this.styleFunction}getType(){return this.type_}transform(t){var e=(t=getProjection(t)).getExtent(),t=t.getWorldExtent();e&&t&&(e=getHeight(t)/getHeight(e),composeTransform(tmpTransform,t[0],t[3],e,-e,0,0,0),transform2D(this.flatCoordinates_,0,this.flatCoordinates_.length,2,tmpTransform,this.flatCoordinates_))}applyTransform(t){t(this.flatCoordinates_,this.flatCoordinates_,this.stride_)}clone(){return new RenderFeature(this.type_,this.flatCoordinates_.slice(),this.ends_?.slice(),this.stride_,Object.assign({},this.properties_),this.id_)}getEnds(){return this.ends_}enableSimplifyTransformed(){return this.simplifyTransformed=memoizeOne((t,e)=>{if(t===this.squaredTolerance_)return this.simplifiedGeometry_;this.simplifiedGeometry_=this.clone(),e&&this.simplifiedGeometry_.applyTransform(e);const r=this.simplifiedGeometry_.getFlatCoordinates();let i;switch(this.type_){case"LineString":r.length=douglasPeucker(r,0,this.simplifiedGeometry_.flatCoordinates_.length,this.simplifiedGeometry_.stride_,t,r,0),i=[r.length];break;case"MultiLineString":i=[],r.length=douglasPeuckerArray(r,0,this.simplifiedGeometry_.ends_,this.simplifiedGeometry_.stride_,t,r,0,i);break;case"Polygon":i=[],r.length=quantizeArray(r,0,this.simplifiedGeometry_.ends_,this.simplifiedGeometry_.stride_,Math.sqrt(t),r,0,i)}return i&&(this.simplifiedGeometry_=new RenderFeature(this.type_,r,i,2,this.properties_,this.id_)),this.squaredTolerance_=t,this.simplifiedGeometry_}),this}}function toGeometry(t){var e=t.getType();switch(e){case"Point":return new Point(t.getFlatCoordinates());case"MultiPoint":return new MultiPoint(t.getFlatCoordinates(),"XY");case"LineString":return new LineString(t.getFlatCoordinates(),"XY");case"MultiLineString":return new MultiLineString(t.getFlatCoordinates(),"XY",t.getEnds());case"Polygon":var r=t.getFlatCoordinates(),i=t.getEnds(),o=inflateEnds(r,i);return 1<o.length?new MultiPolygon(r,"XY",o):new Polygon(r,"XY",i);default:throw new Error("Invalid geometry type:"+e)}}function toFeature(t,e){var r=t.getId(),i=toGeometry(t),t=t.getProperties();const o=new Feature;return void 0!==e&&o.setGeometryName(e),o.setGeometry(i),void 0!==r&&o.setId(r),o.setProperties(t,!0),o}RenderFeature.prototype.getFlatCoordinates=RenderFeature.prototype.getOrientedFlatCoordinates;export default RenderFeature;export{toGeometry,toFeature};