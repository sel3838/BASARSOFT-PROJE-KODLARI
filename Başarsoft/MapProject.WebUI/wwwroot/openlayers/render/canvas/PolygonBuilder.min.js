import CanvasBuilder from"./Builder.js";import CanvasInstruction,{beginPathInstruction,closePathInstruction,fillInstruction,strokeInstruction}from"./Instruction.js";import{defaultFillStyle,defaultLineDash,defaultLineDashOffset}from"../canvas.js";import{snap}from"../../geom/flat/simplify.js";class CanvasPolygonBuilder extends CanvasBuilder{constructor(t,i,s,e){super(t,i,s,e)}drawFlatCoordinatess_(i,s,e,n){var t=this.state,o=void 0!==t.fillStyle,r=void 0!==t.strokeStyle,l=e.length;this.instructions.push(beginPathInstruction),this.hitDetectionInstructions.push(beginPathInstruction);for(let t=0;t<l;++t){var h=e[t],a=this.coordinates.length,u=this.appendFlatLineCoordinates(i,s,h,n,!0,!r),a=[CanvasInstruction.MOVE_TO_LINE_TO,a,u];this.instructions.push(a),this.hitDetectionInstructions.push(a),r&&(this.instructions.push(closePathInstruction),this.hitDetectionInstructions.push(closePathInstruction)),s=h}return o&&(this.instructions.push(fillInstruction),this.hitDetectionInstructions.push(fillInstruction)),r&&(this.instructions.push(strokeInstruction),this.hitDetectionInstructions.push(strokeInstruction)),s}drawCircle(t,i,s){var e=this.state,n=e.fillStyle,o=e.strokeStyle;void 0===n&&void 0===o||(this.setFillStrokeStyles_(),this.beginGeometry(t,i,s),void 0!==e.fillStyle&&this.hitDetectionInstructions.push([CanvasInstruction.SET_FILL_STYLE,defaultFillStyle]),void 0!==e.strokeStyle&&this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE,e.strokeStyle,e.lineWidth,e.lineCap,e.lineJoin,e.miterLimit,defaultLineDash,defaultLineDashOffset]),n=t.getFlatCoordinates(),o=t.getStride(),s=this.coordinates.length,this.appendFlatLineCoordinates(n,0,n.length,o,!1,!1),t=[CanvasInstruction.CIRCLE,s],this.instructions.push(beginPathInstruction,t),this.hitDetectionInstructions.push(beginPathInstruction,t),void 0!==e.fillStyle&&(this.instructions.push(fillInstruction),this.hitDetectionInstructions.push(fillInstruction)),void 0!==e.strokeStyle&&(this.instructions.push(strokeInstruction),this.hitDetectionInstructions.push(strokeInstruction)),this.endGeometry(i))}drawPolygon(t,i,s){var e=this.state,n=e.fillStyle,o=e.strokeStyle;void 0===n&&void 0===o||(this.setFillStrokeStyles_(),this.beginGeometry(t,i,s),void 0!==e.fillStyle&&this.hitDetectionInstructions.push([CanvasInstruction.SET_FILL_STYLE,defaultFillStyle]),void 0!==e.strokeStyle&&this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE,e.strokeStyle,e.lineWidth,e.lineCap,e.lineJoin,e.miterLimit,defaultLineDash,defaultLineDashOffset]),n=t.getEnds(),o=t.getOrientedFlatCoordinates(),s=t.getStride(),this.drawFlatCoordinatess_(o,0,n,s),this.endGeometry(i))}drawMultiPolygon(t,i,e){var n=this.state,s=n.fillStyle,o=n.strokeStyle;if(void 0!==s||void 0!==o){this.setFillStrokeStyles_(),this.beginGeometry(t,i,e),void 0!==n.fillStyle&&this.hitDetectionInstructions.push([CanvasInstruction.SET_FILL_STYLE,defaultFillStyle]),void 0!==n.strokeStyle&&this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE,n.strokeStyle,n.lineWidth,n.lineCap,n.lineJoin,n.miterLimit,defaultLineDash,defaultLineDashOffset]);var r=t.getEndss(),l=t.getOrientedFlatCoordinates(),h=t.getStride();let s=0;for(let t=0,i=r.length;t<i;++t)s=this.drawFlatCoordinatess_(l,s,r[t],h);this.endGeometry(i)}}finish(){this.reverseHitDetectionInstructions(),this.state=null;var s=this.tolerance;if(0!==s){const e=this.coordinates;for(let t=0,i=e.length;t<i;++t)e[t]=snap(e[t],s)}return super.finish()}setFillStrokeStyles_(){var t=this.state;void 0!==t.fillStyle&&this.updateFillStyle(t,this.createFill),void 0!==t.strokeStyle&&this.updateStrokeStyle(t,this.applyStroke)}}export default CanvasPolygonBuilder;