import CanvasImmediateRenderer from"./Immediate.js";import{Icon}from"../../style.js";import{ascending}from"../../array.js";import{clamp}from"../../math.js";import{createCanvasContext2D}from"../../dom.js";import{getTransformFromProjections,getUserProjection,toUserExtent}from"../../proj.js";import{intersects}from"../../extent.js";const HIT_DETECT_RESOLUTION=.5;function createHitDetectionImageData(t,r,e,o,n,a,i,s,c){var l=c?toUserExtent(n,c):n,g=t[0]*HIT_DETECT_RESOLUTION,t=t[1]*HIT_DETECT_RESOLUTION;const m=createCanvasContext2D(g,t);m.imageSmoothingEnabled=!1;g=m.canvas;const h=new CanvasImmediateRenderer(m,HIT_DETECT_RESOLUTION,n,null,i,s,c?getTransformFromProjections(getUserProjection(),c):null);var T=e.length,f=Math.floor(16777215/T);const I={};for(let t=1;t<=T;++t){const D=e[t-1],S=D.getStyleFunction()||o;if(S){let o=S(D,a);if(o){Array.isArray(o)||(o=[o]);const y=t*f;var p=y.toString(16).padStart(7,"#00000");for(let t=0,e=o.length;t<e;++t){const O=o[t],_=O.getGeometryFunction()(D);if(_&&intersects(l,_.getExtent())){const j=O.clone(),R=j.getFill(),U=(R&&R.setColor(p),j.getStroke()),x=(U&&(U.setColor(p),U.setLineDash(null)),j.setText(void 0),O.getImage());if(x){var E=x.getImageSize();if(!E)continue;const H=createCanvasContext2D(E[0],E[1],void 0,{alpha:!1});E=H.canvas;H.fillStyle=p,H.fillRect(0,0,E.width,E.height),j.setImage(new Icon({img:E,anchor:x.getAnchor(),anchorXUnits:"pixels",anchorYUnits:"pixels",offset:x.getOrigin(),opacity:1,size:x.getSize(),scale:x.getScale(),rotation:x.getRotation(),rotateWithView:x.getRotateWithView()}))}E=j.getZIndex()||0;let o=I[E];o||(o={},(I[E]=o).Polygon=[],o.Circle=[],o.LineString=[],o.Point=[]);const w=_.getType();if("GeometryCollection"===w){var d=_.getGeometriesArrayRecursive();for(let t=0,e=d.length;t<e;++t){const L=d[t];o[L.getType().replace("Multi","")].push(L,j)}}else o[w.replace("Multi","")].push(_,j)}}}}}var u=Object.keys(I).map(Number).sort(ascending);for(let t=0,e=u.length;t<e;++t){var v=I[u[t]];for(const M in v){var C=v[M];for(let o=0,t=C.length;o<t;o+=2){h.setStyle(C[o+1]);for(let t=0,e=r.length;t<e;++t)h.setTransform(r[t]),h.drawGeometry(C[o])}}}return m.getImageData(0,0,g.width,g.height)}function hitDetect(t,e,o){const r=[];var n,a;return o&&(a=Math.floor(Math.round(t[0])*HIT_DETECT_RESOLUTION),t=Math.floor(Math.round(t[1])*HIT_DETECT_RESOLUTION),a=4*(clamp(a,0,o.width-1)+clamp(t,0,o.height-1)*o.width),t=o.data[a],n=o.data[1+a],o=o.data[2+a]+256*(n+256*t),a=Math.floor(16777215/e.length),o&&o%a==0&&r.push(e[o/a-1])),r}export{HIT_DETECT_RESOLUTION,createHitDetectionImageData,hitDetect};