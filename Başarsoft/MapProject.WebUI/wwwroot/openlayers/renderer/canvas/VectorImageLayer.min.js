import CanvasImageLayerRenderer from"./ImageLayer.js";import CanvasVectorLayerRenderer from"./VectorLayer.js";import EventType from"../../events/EventType.js";import ImageCanvas from"../../ImageCanvas.js";import ImageState from"../../ImageState.js";import RBush from"rbush";import ViewHint from"../../ViewHint.js";import{apply,compose,create}from"../../transform.js";import{fromResolutionLike}from"../../resolution.js";import{getHeight,getWidth,isEmpty,scaleFromCenter}from"../../extent.js";class CanvasVectorImageLayerRenderer extends CanvasImageLayerRenderer{constructor(e){super(e),this.vectorRenderer_=new CanvasVectorLayerRenderer(e),this.layerImageRatio_=e.getImageRatio(),this.coordinateToVectorPixelTransform_=create(),this.renderedPixelToCoordinateTransform_=null}disposeInternal(){this.vectorRenderer_.dispose(),super.disposeInternal()}getFeatures(e){if(!this.vectorRenderer_)return Promise.resolve([]);e=apply(this.coordinateToVectorPixelTransform_,apply(this.renderedPixelToCoordinateTransform_,e.slice()));return this.vectorRenderer_.getFeatures(e)}handleFontsChanged(){this.vectorRenderer_.handleFontsChanged()}prepareFrame(e){const t=e.pixelRatio,a=e.viewState;var o=a.resolution,n=e.viewHints;const i=this.vectorRenderer_;let s=e.extent;1!==this.layerImageRatio_&&(s=s.slice(0),scaleFromCenter(s,this.layerImageRatio_));const l=getWidth(s)/o,d=getHeight(s)/o;if(!n[ViewHint.ANIMATING]&&!n[ViewHint.INTERACTING]&&!isEmpty(s)){i.useContainer(null,null);var n=i.context,m=e.layerStatesArray[e.layerIndex],m=Object.assign({},m,{opacity:1});const c=Object.assign({},e,{extent:s,size:[l,d],viewState:Object.assign({},e.viewState,{rotation:0}),layerStatesArray:[m],layerIndex:0,declutter:null});m=this.getLayer().getDeclutter();m&&(c.declutter={[m]:new RBush(9)});let r=!0;const p=new ImageCanvas(s,o,t,n.canvas,function(e){i.prepareFrame(c)&&i.replayGroupChanged&&(i.clipping=!1,i.renderFrame(c,null)&&(i.renderDeclutter(c),i.renderDeferred(c),r=!1),e())});p.addEventListener(EventType.CHANGE,()=>{var e;p.getState()===ImageState.LOADED&&(this.image_=r?null:p,e=p.getPixelRatio(),e=fromResolutionLike(p.getResolution())*t/e,this.renderedResolution=e,this.coordinateToVectorPixelTransform_=compose(this.coordinateToVectorPixelTransform_,l/2,d/2,1/e,-1/e,0,-a.center[0],-a.center[1]))}),p.load()}return this.image_&&(this.renderedPixelToCoordinateTransform_=e.pixelToCoordinateTransform.slice()),!!this.image_}preRender(){}postRender(){}renderDeclutter(){}forEachFeatureAtCoordinate(e,r,t,a,o){return this.vectorRenderer_?this.vectorRenderer_.forEachFeatureAtCoordinate(e,r,t,a,o):super.forEachFeatureAtCoordinate(e,r,t,a,o)}}export default CanvasVectorImageLayerRenderer;