import Tile from"./Tile.js";import TileState from"./TileState.js";import{createCanvasContext2D}from"./dom.js";function asImageLike(t){return t instanceof Image||t instanceof HTMLCanvasElement||t instanceof HTMLVideoElement||t instanceof ImageBitmap?t:null}function asArrayLike(t){return t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Float32Array||t instanceof DataView?t:null}let sharedContext=null;function toArray(t){const e=(sharedContext=sharedContext||createCanvasContext2D(t.width,t.height,void 0,{willReadFrequently:!0})).canvas;var a=t.width,i=(e.width!==a&&(e.width=a),t.height);return e.height!==i&&(e.height=i),sharedContext.clearRect(0,0,a,i),sharedContext.drawImage(t,0,0),sharedContext.getImageData(0,0,a,i).data}const defaultSize=[256,256];class DataTile extends Tile{constructor(t){var e=TileState.IDLE;super(t.tileCoord,e,{transition:t.transition,interpolate:t.interpolate}),this.loader_=t.loader,this.data_=null,this.error_=null,this.size_=t.size||null}getSize(){if(this.size_)return this.size_;var t=asImageLike(this.data_);return t?[t.width,t.height]:defaultSize}getData(){return this.data_}getError(){return this.error_}load(){if(this.state===TileState.IDLE||this.state===TileState.ERROR){this.state=TileState.LOADING,this.changed();const e=this;this.loader_().then(function(t){e.data_=t,e.state=TileState.LOADED,e.changed()}).catch(function(t){e.error_=t,e.state=TileState.ERROR,e.changed()})}}}export default DataTile;export{asImageLike,asArrayLike,toArray};