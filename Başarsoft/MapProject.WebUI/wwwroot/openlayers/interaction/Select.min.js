import Collection from"../Collection.js";import CollectionEventType from"../CollectionEventType.js";import Event from"../events/Event.js";import Feature from"../Feature.js";import Interaction from"./Interaction.js";import VectorLayer from"../layer/Vector.js";import{TRUE}from"../functions.js";import{clear}from"../obj.js";import{createEditingStyle}from"../style/Style.js";import{extend}from"../array.js";import{getUid}from"../util.js";import{never,shiftKeyOnly,singleClick}from"../events/condition.js";const SelectEventType={SELECT:"select"};class SelectEvent extends Event{constructor(e,t,i,r){super(e),this.selected=t,this.deselected=i,this.mapBrowserEvent=r}}const originalFeatureStyles={};class Select extends Interaction{constructor(e){super(),this.on,this.once,this.un,e=e||{},this.boundAddFeature_=this.addFeature_.bind(this),this.boundRemoveFeature_=this.removeFeature_.bind(this),this.condition_=e.condition||singleClick,this.addCondition_=e.addCondition||never,this.removeCondition_=e.removeCondition||never,this.toggleCondition_=e.toggleCondition||shiftKeyOnly,this.multi_=e.multi||!1,this.filter_=e.filter||TRUE,this.hitTolerance_=e.hitTolerance||0,this.style_=void 0!==e.style?e.style:getDefaultStyleFunction(),this.features_=e.features||new Collection;let t;if(e.layers)if("function"==typeof e.layers)t=e.layers;else{const i=e.layers;t=function(e){return i.includes(e)}}else t=TRUE;this.layerFilter_=t,this.featureLayerAssociation_={}}addFeatureLayerAssociation_(e,t){this.featureLayerAssociation_[getUid(e)]=t}getFeatures(){return this.features_}getHitTolerance(){return this.hitTolerance_}getLayer(e){return this.featureLayerAssociation_[getUid(e)]}setHitTolerance(e){this.hitTolerance_=e}setMap(e){this.getMap()&&this.style_&&this.features_.forEach(this.restorePreviousStyle_.bind(this)),super.setMap(e),e?(this.features_.addEventListener(CollectionEventType.ADD,this.boundAddFeature_),this.features_.addEventListener(CollectionEventType.REMOVE,this.boundRemoveFeature_),this.style_&&this.features_.forEach(this.applySelectedStyle_.bind(this))):(this.features_.removeEventListener(CollectionEventType.ADD,this.boundAddFeature_),this.features_.removeEventListener(CollectionEventType.REMOVE,this.boundRemoveFeature_))}addFeature_(e){const t=e.element;this.style_&&this.applySelectedStyle_(t),this.getLayer(t)||(e=this.getMap().getAllLayers().find(function(e){if(e instanceof VectorLayer&&e.getSource()&&e.getSource().hasFeature(t))return e}))&&this.addFeatureLayerAssociation_(t,e)}removeFeature_(e){this.style_&&this.restorePreviousStyle_(e.element)}getStyle(){return this.style_}applySelectedStyle_(e){var t=getUid(e);t in originalFeatureStyles||(originalFeatureStyles[t]=e.getStyle()),e.setStyle(this.style_)}restorePreviousStyle_(t){var i=this.getMap().getInteractions().getArray();for(let e=i.length-1;0<=e;--e){const r=i[e];if(r!==this&&r instanceof Select&&r.getStyle()&&-1!==r.getFeatures().getArray().lastIndexOf(t))return void t.setStyle(r.getStyle())}var e=getUid(t);t.setStyle(originalFeatureStyles[e]),delete originalFeatureStyles[e]}removeFeatureLayerAssociation_(e){delete this.featureLayerAssociation_[getUid(e)]}handleEvent(e){if(!this.condition_(e))return!0;const i=this.addCondition_(e),r=this.removeCondition_(e),s=this.toggleCondition_(e);var t=!i&&!r&&!s;const n=e.map,o=this.getFeatures(),l=[],a=[];if(t){clear(this.featureLayerAssociation_),n.forEachFeatureAtPixel(e.pixel,(e,t)=>{if(e instanceof Feature&&this.filter_(e,t))return this.addFeatureLayerAssociation_(e,t),a.push(e),!this.multi_},{layerFilter:this.layerFilter_,hitTolerance:this.hitTolerance_});for(let e=o.getLength()-1;0<=e;--e){var h=o.item(e),c=a.indexOf(h);-1<c?a.splice(c,1):(o.remove(h),l.push(h))}0!==a.length&&o.extend(a)}else{n.forEachFeatureAtPixel(e.pixel,(e,t)=>{if(e instanceof Feature&&this.filter_(e,t))return!i&&!s||o.getArray().includes(e)?(r||s)&&o.getArray().includes(e)&&(l.push(e),this.removeFeatureLayerAssociation_(e)):(this.addFeatureLayerAssociation_(e,t),a.push(e)),!this.multi_},{layerFilter:this.layerFilter_,hitTolerance:this.hitTolerance_});for(let e=l.length-1;0<=e;--e)o.remove(l[e]);o.extend(a)}return(0<a.length||0<l.length)&&this.dispatchEvent(new SelectEvent(SelectEventType.SELECT,a,l,e)),!0}}function getDefaultStyleFunction(){const t=createEditingStyle();return extend(t.Polygon,t.LineString),extend(t.GeometryCollection,t.LineString),function(e){return e.getGeometry()?t[e.getGeometry().getType()]:null}}export default Select;export{SelectEvent};