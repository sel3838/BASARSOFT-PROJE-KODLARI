import EventType from"../events/EventType.js";import Interaction,{pan}from"./Interaction.js";import Key from"../events/Key.js";import{noModifierKeys,targetNotEditable}from"../events/condition.js";import{rotate as rotateCoordinate}from"../coordinate.js";class KeyboardPan extends Interaction{constructor(t){super(),t=t||{},this.defaultCondition_=function(t){return noModifierKeys(t)&&targetNotEditable(t)},this.condition_=void 0!==t.condition?t.condition:this.defaultCondition_,this.duration_=void 0!==t.duration?t.duration:100,this.pixelDelta_=void 0!==t.pixelDelta?t.pixelDelta:128}handleEvent(o){let i=!1;if(o.type==EventType.KEYDOWN){const r=o.originalEvent;var n=r.key;if(this.condition_(o)&&(n==Key.DOWN||n==Key.LEFT||n==Key.RIGHT||n==Key.UP)){const a=o.map,d=a.getView();o=d.getResolution()*this.pixelDelta_;let t=0,e=0;n==Key.DOWN?e=-o:n==Key.LEFT?t=-o:n==Key.RIGHT?t=o:e=o;n=[t,e];rotateCoordinate(n,d.getRotation()),pan(d,n,this.duration_),r.preventDefault(),i=!0}}return!i}}export default KeyboardPan;