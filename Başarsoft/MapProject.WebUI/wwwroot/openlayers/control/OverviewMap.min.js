import Collection from"../Collection.js";import Control from"./Control.js";import EventType from"../events/EventType.js";import Map from"../Map.js";import MapEventType from"../MapEventType.js";import MapProperty from"../MapProperty.js";import ObjectEventType from"../ObjectEventType.js";import Overlay from"../Overlay.js";import View from"../View.js";import ViewProperty from"../ViewProperty.js";import{CLASS_COLLAPSED,CLASS_CONTROL,CLASS_UNSELECTABLE}from"../css.js";import{containsExtent,equals as equalsExtent,getBottomRight,getTopLeft,scaleFromCenter}from"../extent.js";import{listen,listenOnce}from"../events.js";import{fromExtent as polygonFromExtent}from"../geom/Polygon.js";import{replaceNode}from"../dom.js";const MAX_RATIO=.75,MIN_RATIO=.1;class OverviewMap extends Control{constructor(e){e=e||{},super({element:document.createElement("div"),render:e.render,target:e.target}),this.boundHandleRotationChanged_=this.handleRotationChanged_.bind(this),this.collapsed_=void 0===e.collapsed||e.collapsed,this.collapsible_=void 0===e.collapsible||e.collapsible,this.collapsible_||(this.collapsed_=!1),this.rotateWithView_=void 0!==e.rotateWithView&&e.rotateWithView;var t=(this.viewExtent_=void 0)!==e.className?e.className:"ol-overviewmap",i=void 0!==e.tipLabel?e.tipLabel:"Overview map",o=void 0!==e.collapseLabel?e.collapseLabel:"‹",o=("string"==typeof o?(this.collapseLabel_=document.createElement("span"),this.collapseLabel_.textContent=o):this.collapseLabel_=o,void 0!==e.label?e.label:"›"),o=("string"==typeof o?(this.label_=document.createElement("span"),this.label_.textContent=o):this.label_=o,this.collapsible_&&!this.collapsed_?this.collapseLabel_:this.label_);const s=document.createElement("button"),a=(s.setAttribute("type","button"),s.title=i,s.appendChild(o),s.addEventListener(EventType.CLICK,this.handleClick_.bind(this),!1),this.ovmapDiv_=document.createElement("div"),this.ovmapDiv_.className="ol-overviewmap-map",this.view_=e.view,new Map({view:e.view,controls:new Collection,interactions:new Collection})),n=(this.ovmap_=a,e.layers&&e.layers.forEach(function(e){a.addLayer(e)}),document.createElement("div"));n.className="ol-overviewmap-box",n.style.boxSizing="border-box",this.boxOverlay_=new Overlay({position:[0,0],positioning:"center-center",element:n}),this.ovmap_.addOverlay(this.boxOverlay_);i=t+" "+CLASS_UNSELECTABLE+" "+CLASS_CONTROL+(this.collapsed_&&this.collapsible_?" "+CLASS_COLLAPSED:"")+(this.collapsible_?"":" ol-uncollapsible");const l=this.element,r=(l.className=i,l.appendChild(this.ovmapDiv_),l.appendChild(s),this),p=this.boxOverlay_,h=this.boxOverlay_.getElement(),d=function(e){return{clientX:e.clientX,clientY:e.clientY}},_=function(e){e=d(e),e=a.getEventCoordinateInternal(e);p.setPosition(e)},v=function(e){e=a.getEventCoordinateInternal(e);r.getMap().getView().setCenterInternal(e),window.removeEventListener("mousemove",_),window.removeEventListener("mouseup",v)};h.addEventListener("mousedown",function(){window.addEventListener("mousemove",_),window.addEventListener("mouseup",v)})}setMap(e){const t=this.getMap();var i;if(e!==t&&(t&&((i=t.getView())&&this.unbindView_(i),this.ovmap_.setTarget(null)),super.setMap(e),e)){this.ovmap_.setTarget(this.ovmapDiv_),this.listenerKeys.push(listen(e,ObjectEventType.PROPERTYCHANGE,this.handleMapPropertyChange_,this));const o=e.getView();o&&(this.bindView_(o),o.isDef()&&(this.ovmap_.updateSize(),this.resetExtent_())),this.ovmap_.isRendered()||this.updateBoxAfterOvmapIsRendered_()}}handleMapPropertyChange_(e){var t;e.key===MapProperty.VIEW?((t=e.oldValue)&&this.unbindView_(t),t=this.getMap().getView(),this.bindView_(t)):this.ovmap_.isRendered()||e.key!==MapProperty.TARGET&&e.key!==MapProperty.SIZE||this.ovmap_.updateSize()}bindView_(e){var t;this.view_||(t=new View({projection:e.getProjection()}),this.ovmap_.setView(t)),e.addChangeListener(ViewProperty.ROTATION,this.boundHandleRotationChanged_),this.handleRotationChanged_()}unbindView_(e){e.removeChangeListener(ViewProperty.ROTATION,this.boundHandleRotationChanged_)}handleRotationChanged_(){this.rotateWithView_&&this.ovmap_.getView().setRotation(this.getMap().getView().getRotation())}validateExtent_(){const e=this.getMap(),t=this.ovmap_;if(e.isRendered()&&t.isRendered()){var i=e.getSize();const r=e.getView();i=r.calculateExtentInternal(i);if(!this.viewExtent_||!equalsExtent(i,this.viewExtent_)){this.viewExtent_=i;var o=t.getSize();const p=t.getView();var s=p.calculateExtentInternal(o),a=t.getPixelFromCoordinateInternal(getTopLeft(i)),n=t.getPixelFromCoordinateInternal(getBottomRight(i)),l=Math.abs(a[0]-n[0]),a=Math.abs(a[1]-n[1]),n=o[0],o=o[1];l<n*MIN_RATIO||a<o*MIN_RATIO||l>n*MAX_RATIO||a>o*MAX_RATIO?this.resetExtent_():containsExtent(s,i)||this.recenter_()}}}resetExtent_(){if(0!==MAX_RATIO&&0!==MIN_RATIO){const i=this.getMap(),o=this.ovmap_;var e=i.getSize();const s=i.getView();e=s.calculateExtentInternal(e);const a=o.getView();var t=Math.log(MAX_RATIO/MIN_RATIO)/Math.LN2,t=1/(Math.pow(2,t/2)*MIN_RATIO);scaleFromCenter(e,t),a.fitInternal(polygonFromExtent(e))}}recenter_(){const e=this.getMap(),t=this.ovmap_,i=e.getView(),o=t.getView();o.setCenterInternal(i.getCenterInternal())}updateBox_(){const e=this.getMap(),t=this.ovmap_;if(e.isRendered()&&t.isRendered()){var i=e.getSize();const r=e.getView(),p=t.getView();var o=this.rotateWithView_?0:-r.getRotation();const h=this.boxOverlay_,d=this.boxOverlay_.getElement();var s=r.getCenterInternal(),a=r.getResolution(),n=p.getResolution(),l=i[0]*a/n,i=i[1]*a/n;h.setPosition(s),d&&(d.style.width=l+"px",d.style.height=i+"px",d.style.transform="rotate("+o+"rad)")}}updateBoxAfterOvmapIsRendered_(){this.ovmapPostrenderKey_||(this.ovmapPostrenderKey_=listenOnce(this.ovmap_,MapEventType.POSTRENDER,function(e){delete this.ovmapPostrenderKey_,this.updateBox_()},this))}handleClick_(e){e.preventDefault(),this.handleToggle_()}handleToggle_(){this.element.classList.toggle(CLASS_COLLAPSED),this.collapsed_?replaceNode(this.collapseLabel_,this.label_):replaceNode(this.label_,this.collapseLabel_),this.collapsed_=!this.collapsed_;const e=this.ovmap_;if(!this.collapsed_){if(e.isRendered())return this.viewExtent_=void 0,void e.render();e.updateSize(),this.resetExtent_(),this.updateBoxAfterOvmapIsRendered_()}}getCollapsible(){return this.collapsible_}setCollapsible(e){this.collapsible_!==e&&(this.collapsible_=e,this.element.classList.toggle("ol-uncollapsible"),!e&&this.collapsed_&&this.handleToggle_())}setCollapsed(e){this.collapsible_&&this.collapsed_!==e&&this.handleToggle_()}getCollapsed(){return this.collapsed_}getRotateWithView(){return this.rotateWithView_}setRotateWithView(e){this.rotateWithView_!==e&&(this.rotateWithView_=e,0!==this.getMap().getView().getRotation()&&(this.rotateWithView_?this.handleRotationChanged_():this.ovmap_.getView().setRotation(0),this.viewExtent_=void 0,this.validateExtent_(),this.updateBox_()))}getOverviewMap(){return this.ovmap_}render(e){this.validateExtent_(),this.updateBox_()}}export default OverviewMap;