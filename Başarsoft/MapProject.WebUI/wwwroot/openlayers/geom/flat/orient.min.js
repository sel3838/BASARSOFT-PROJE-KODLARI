import{coordinates as reverseCoordinates}from"./reverse.js";function linearRingIsClockwise(e,n,r,i){let t=0,s=e[r-i],o=e[r-i+1];for(;n<r;n+=i){var l=e[n],a=e[n+1];t+=(l-s)*(a+o),s=l,o=a}return 0===t?void 0:0<t}function linearRingsAreOriented(r,i,t,s,o){o=void 0!==o&&o;for(let e=0,n=t.length;e<n;++e){var l=t[e],a=linearRingIsClockwise(r,i,l,s);if(0===e){if(o&&a||!o&&!a)return!1}else if(o&&!a||!o&&a)return!1;i=l}return!0}function linearRingssAreOriented(r,i,t,s,o){for(let e=0,n=t.length;e<n;++e){var l=t[e];if(!linearRingsAreOriented(r,i,l,s,o))return!1;l.length&&(i=l[l.length-1])}return!0}function orientLinearRings(r,i,t,s,o){o=void 0!==o&&o;for(let e=0,n=t.length;e<n;++e){var l=t[e],a=linearRingIsClockwise(r,i,l,s);(0===e?o&&a||!o&&!a:o&&!a||!o&&a)&&reverseCoordinates(r,i,l,s),i=l}return i}function orientLinearRingsArray(r,i,t,s,o){for(let e=0,n=t.length;e<n;++e)i=orientLinearRings(r,i,t[e],s,o);return i}function inflateEnds(r,i){const t=[];let s=0,o=0,l;for(let e=0,n=i.length;e<n;++e){var a=i[e],g=linearRingIsClockwise(r,s,a,2);if(g===(l=void 0===l?g:l))t.push(i.slice(o,e+1));else{if(0===t.length)continue;t[t.length-1].push(i[o])}o=e+1,s=a}return t}export{linearRingIsClockwise,linearRingsAreOriented,linearRingssAreOriented,orientLinearRings,orientLinearRingsArray,inflateEnds};