import{getUid}from"../util.js";const DEFAULT_VERTEX_SHADER=`
  precision mediump float;
  
  attribute vec2 a_position;
  varying vec2 v_texCoord;
  varying vec2 v_screenCoord;
  
  uniform vec2 u_screenSize;
   
  void main() {
    v_texCoord = a_position * 0.5 + 0.5;
    v_screenCoord = v_texCoord * u_screenSize;
    gl_Position = vec4(a_position, 0.0, 1.0);
  }
`,DEFAULT_FRAGMENT_SHADER=`
  precision mediump float;
   
  uniform sampler2D u_image;
  uniform float u_opacity;
   
  varying vec2 v_texCoord;
   
  void main() {
    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;
  }
`;class WebGLPostProcessingPass{constructor(r){this.gl_=r.webGlContext;const t=this.gl_;this.scaleRatio_=r.scaleRatio||1,this.renderTargetTexture_=t.createTexture(),this.renderTargetTextureSize_=null,this.frameBuffer_=t.createFramebuffer(),this.depthBuffer_=t.createRenderbuffer();var e=t.createShader(t.VERTEX_SHADER),a=(t.shaderSource(e,r.vertexShader||DEFAULT_VERTEX_SHADER),t.compileShader(e),t.createShader(t.FRAGMENT_SHADER));t.shaderSource(a,r.fragmentShader||DEFAULT_FRAGMENT_SHADER),t.compileShader(a),this.renderTargetProgram_=t.createProgram(),t.attachShader(this.renderTargetProgram_,e),t.attachShader(this.renderTargetProgram_,a),t.linkProgram(this.renderTargetProgram_),this.renderTargetVerticesBuffer_=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,this.renderTargetVerticesBuffer_),t.bufferData(t.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,1,-1,1,1,-1,1]),t.STATIC_DRAW),this.renderTargetAttribLocation_=t.getAttribLocation(this.renderTargetProgram_,"a_position"),this.renderTargetUniformLocation_=t.getUniformLocation(this.renderTargetProgram_,"u_screenSize"),this.renderTargetOpacityLocation_=t.getUniformLocation(this.renderTargetProgram_,"u_opacity"),this.renderTargetTextureLocation_=t.getUniformLocation(this.renderTargetProgram_,"u_image"),this.uniforms_=[],r.uniforms&&Object.keys(r.uniforms).forEach(e=>{this.uniforms_.push({value:r.uniforms[e],location:t.getUniformLocation(this.renderTargetProgram_,e)})})}getGL(){return this.gl_}init(e){const r=this.getGL();var t,a,i,n=[r.drawingBufferWidth*this.scaleRatio_,r.drawingBufferHeight*this.scaleRatio_];r.bindFramebuffer(r.FRAMEBUFFER,this.getFrameBuffer()),r.bindRenderbuffer(r.RENDERBUFFER,this.getDepthBuffer()),r.viewport(0,0,n[0],n[1]),this.renderTargetTextureSize_&&this.renderTargetTextureSize_[0]===n[0]&&this.renderTargetTextureSize_[1]===n[1]||(this.renderTargetTextureSize_=n,t=r.RGBA,a=r.RGBA,i=r.UNSIGNED_BYTE,r.bindTexture(r.TEXTURE_2D,this.renderTargetTexture_),r.texImage2D(r.TEXTURE_2D,0,t,n[0],n[1],0,a,i,null),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.LINEAR),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,this.renderTargetTexture_,0),r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_COMPONENT16,n[0],n[1]),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,this.depthBuffer_))}apply(e,r,t,a){const i=this.getGL();var n=e.size,o=(i.bindFramebuffer(i.FRAMEBUFFER,r?r.getFrameBuffer():null),i.activeTexture(i.TEXTURE0),i.bindTexture(i.TEXTURE_2D,this.renderTargetTexture_),r||(r=getUid(i.canvas),e.renderTargets[r]||((o=i.getContextAttributes())&&o.preserveDrawingBuffer&&(i.clearColor(0,0,0,0),i.clearDepth(1),i.clear(i.COLOR_BUFFER_BIT|i.DEPTH_BUFFER_BIT)),e.renderTargets[r]=!0)),i.disable(i.DEPTH_TEST),i.enable(i.BLEND),i.blendFunc(i.ONE,i.ONE_MINUS_SRC_ALPHA),i.viewport(0,0,i.drawingBufferWidth,i.drawingBufferHeight),i.bindBuffer(i.ARRAY_BUFFER,this.renderTargetVerticesBuffer_),i.useProgram(this.renderTargetProgram_),i.enableVertexAttribArray(this.renderTargetAttribLocation_),i.vertexAttribPointer(this.renderTargetAttribLocation_,2,i.FLOAT,!1,0,0),i.uniform2f(this.renderTargetUniformLocation_,n[0],n[1]),i.uniform1i(this.renderTargetTextureLocation_,0),e.layerStatesArray[e.layerIndex].opacity);i.uniform1f(this.renderTargetOpacityLocation_,o),this.applyUniforms(e),t&&t(i,e),i.drawArrays(i.TRIANGLES,0,6),a&&a(i,e)}getFrameBuffer(){return this.frameBuffer_}getDepthBuffer(){return this.depthBuffer_}applyUniforms(r){const t=this.getGL();let a,i=1;this.uniforms_.forEach(function(e){if((a="function"==typeof e.value?e.value(r):e.value)instanceof HTMLCanvasElement||a instanceof ImageData)e.texture||(e.texture=t.createTexture()),t.activeTexture(t["TEXTURE"+i]),t.bindTexture(t.TEXTURE_2D,e.texture),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),a instanceof ImageData?t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,a.width,a.height,0,t.UNSIGNED_BYTE,new Uint8Array(a.data)):t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,a),t.uniform1i(e.location,i++);else if(Array.isArray(a))switch(a.length){case 2:return void t.uniform2f(e.location,a[0],a[1]);case 3:return void t.uniform3f(e.location,a[0],a[1],a[2]);case 4:return void t.uniform4f(e.location,a[0],a[1],a[2],a[3]);default:return}else"number"==typeof a&&t.uniform1f(e.location,a)})}}export default WebGLPostProcessingPass;