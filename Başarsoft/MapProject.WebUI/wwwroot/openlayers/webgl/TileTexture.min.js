import BaseTileRepresentation from"./BaseTileRepresentation.js";import DataTile,{asArrayLike,asImageLike}from"../DataTile.js";import EventType from"../events/EventType.js";import ImageTile from"../ImageTile.js";import ReprojTile from"../reproj/Tile.js";import WebGLArrayBuffer from"./Buffer.js";import{ARRAY_BUFFER,STATIC_DRAW}from"../webgl.js";import{createCanvasContext2D}from"../dom.js";import{toSize}from"../size.js";function bindAndConfigure(e,t,r){r=r?e.LINEAR:e.NEAREST;e.bindTexture(e.TEXTURE_2D,t),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,r),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,r)}function uploadImageTexture(e,t,r,a){bindAndConfigure(e,t,a),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,r)}function uploadDataTexture(e,t,r,a,i,n){const o=e.getGL();let s,l;l=r instanceof Float32Array?(s=o.FLOAT,e.getExtension("OES_texture_float"),null!==e.getExtension("OES_texture_float_linear")):(s=o.UNSIGNED_BYTE,!0),bindAndConfigure(o,t,n&&l);e=r.byteLength/a[1];let h=1;e%8==0?h=8:e%4==0?h=4:e%2==0&&(h=2);let u;switch(i){case 1:u=o.LUMINANCE;break;case 2:u=o.LUMINANCE_ALPHA;break;case 3:u=o.RGB;break;case 4:u=o.RGBA;break;default:throw new Error("Unsupported number of bands: "+i)}t=o.getParameter(o.UNPACK_ALIGNMENT);o.pixelStorei(o.UNPACK_ALIGNMENT,h),o.texImage2D(o.TEXTURE_2D,0,u,a[0],a[1],0,u,s,r),o.pixelStorei(o.UNPACK_ALIGNMENT,t)}let pixelContext=null;function createPixelContext(){pixelContext=createCanvasContext2D(1,1,void 0,{willReadFrequently:!0})}class TileTexture extends BaseTileRepresentation{constructor(e){super(e),this.textures=[],this.renderSize_=toSize(e.grid.getTileSize(e.tile.tileCoord[0])),this.bandCount=NaN;const t=new WebGLArrayBuffer(ARRAY_BUFFER,STATIC_DRAW);t.fromArray([0,1,1,1,1,0,0,0]),this.helper_.flushBufferData(t),this.coords=t,this.setTile(e.tile)}uploadTile(){const t=this.helper_,r=t.getGL(),a=this.tile;this.textures.length=0;let i;i=a instanceof ImageTile||a instanceof ReprojTile?a.getImage():a.getData();var e=asImageLike(i);if(e)return n=r.createTexture(),this.textures.push(n),this.bandCount=4,uploadImageTexture(r,n,e,a.interpolate),void this.setReady();i=asArrayLike(i);var n=a.getSize(),o=[n[0]+2*this.gutter_,n[1]+2*this.gutter_],e=i instanceof Float32Array,s=o[0]*o[1];const l=e?Float32Array:Uint8Array;var h=l.BYTES_PER_ELEMENT,u=i.byteLength/o[1],T=(this.bandCount=Math.floor(u/h/o[0]),Math.ceil(this.bandCount/4));if(1===T)return n=r.createTexture(),this.textures.push(n),uploadDataTexture(t,n,i,o,this.bandCount,a.interpolate),void this.setReady();const x=new Array(T);for(let e=0;e<T;++e){var E=r.createTexture(),E=(this.textures.push(E),e<T-1?4:(this.bandCount-1)%4+1);x[e]=new l(s*E)}let f=0,d=0;var g=o[0]*this.bandCount;for(let e=0;e<o[1];++e){for(let e=0;e<g;++e){var _=i[d+e],p=Math.floor(f/this.bandCount),A=e%this.bandCount,m=Math.floor(A/4);const D=x[m];m=D.length/s;D[p*m+A%4]=_,++f}d+=u/h}for(let e=0;e<T;++e){var c=this.textures[e],R=x[e],C=R.length/s;uploadDataTexture(t,c,R,o,C,a.interpolate)}this.setReady()}disposeInternal(){const t=this.helper_.getGL();this.helper_.deleteBuffer(this.coords);for(let e=0;e<this.textures.length;++e)t.deleteTexture(this.textures[e]);this.tile.removeEventListener(EventType.CHANGE,this.handleTileChange_)}getImagePixelData_(e,t,r){var a=this.gutter_,i=this.renderSize_[0],n=this.renderSize_[1],o=(pixelContext||createPixelContext(),pixelContext.clearRect(0,0,1,1),e.width),s=e.height-2*a,t=a+Math.floor(t/i*(o-2*a)),i=a+Math.floor(r/n*s);let l;try{pixelContext.drawImage(e,t,i,1,1,0,0,1,1),l=pixelContext.getImageData(0,0,1,1).data}catch(e){return pixelContext=null}return l}getArrayPixelData_(e,t,r,a){var i=this.gutter_,n=this.renderSize_[0],o=this.renderSize_[1],s=t[0],t=t[1],l=s+2*i,h=t+2*i,s=i+Math.floor(s*(r/n)),r=i+Math.floor(t*(a/o));if(e instanceof DataView){n=e.byteLength/(l*h);const u=n*(r*l+s);i=e.buffer.slice(u,u+n);return new DataView(i)}const u=this.bandCount*(r*l+s);return e.slice(u,u+this.bandCount)}getPixelData(e,t){return this.loaded?this.tile instanceof DataTile?(r=this.tile.getData(),(a=asArrayLike(r))?(i=this.tile.getSize(),this.getArrayPixelData_(a,i,e,t)):this.getImagePixelData_(asImageLike(r),e,t)):this.getImagePixelData_(this.tile.getImage(),e,t):null;var r,a,i}}export default TileTexture;