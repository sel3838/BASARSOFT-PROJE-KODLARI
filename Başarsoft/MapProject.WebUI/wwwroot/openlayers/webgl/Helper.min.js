import ContextEventType from"../webgl/ContextEventType.js";import Disposable from"../Disposable.js";import WebGLPostProcessingPass from"./PostProcessingPass.js";import{FLOAT,UNSIGNED_BYTE,UNSIGNED_INT,UNSIGNED_SHORT,getContext}from"../webgl.js";import{clear}from"../obj.js";import{compose as composeTransform,create as createTransform}from"../transform.js";import{create,fromTransform}from"../vec/mat4.js";import{getUid}from"../util.js";const ShaderType={FRAGMENT_SHADER:35632,VERTEX_SHADER:35633},DefaultUniform={PROJECTION_MATRIX:"u_projectionMatrix",SCREEN_TO_WORLD_MATRIX:"u_screenToWorldMatrix",TIME:"u_time",ZOOM:"u_zoom",RESOLUTION:"u_resolution",ROTATION:"u_rotation",VIEWPORT_SIZE_PX:"u_viewportSizePx",PIXEL_RATIO:"u_pixelRatio",HIT_DETECTION:"u_hitDetection"},AttributeType={UNSIGNED_BYTE:UNSIGNED_BYTE,UNSIGNED_SHORT:UNSIGNED_SHORT,UNSIGNED_INT:UNSIGNED_INT,FLOAT:FLOAT},canvasCache={};function getSharedCanvasCacheKey(e){return"shared/"+e}let uniqueCanvasCacheKeyCount=0;function getUniqueCanvasCacheKey(){var e="unique/"+uniqueCanvasCacheKeyCount;return uniqueCanvasCacheKeyCount+=1,e}function getOrCreateContext(e){let t=canvasCache[e];if(!t){const a=document.createElement("canvas");a.width=1,a.height=1,a.style.position="absolute",a.style.left="0";var r=getContext(a);t={users:0,context:r},canvasCache[e]=t}return t.users+=1,t.context}function releaseCanvas(e){const t=canvasCache[e];if(t&&(--t.users,!(0<t.users))){const r=t.context,a=r.getExtension("WEBGL_lose_context"),i=(a&&a.loseContext(),r.canvas);i.width=1,i.height=1,delete canvasCache[e]}}class WebGLHelper extends Disposable{constructor(e){super(),e=e||{},this.boundHandleWebGLContextLost_=this.handleWebGLContextLost.bind(this),this.boundHandleWebGLContextRestored_=this.handleWebGLContextRestored.bind(this),this.canvasCacheKey_=e.canvasCacheKey?getSharedCanvasCacheKey(e.canvasCacheKey):getUniqueCanvasCacheKey(),this.gl_=getOrCreateContext(this.canvasCacheKey_),this.bufferCache_={},this.extensionCache_={},this.currentProgram_=null,this.needsToBeRecreated_=!1;const t=this.gl_.canvas;t.addEventListener(ContextEventType.LOST,this.boundHandleWebGLContextLost_),t.addEventListener(ContextEventType.RESTORED,this.boundHandleWebGLContextRestored_),this.offsetRotateMatrix_=createTransform(),this.offsetScaleMatrix_=createTransform(),this.tmpMat4_=create(),this.uniformLocationsByProgram_={},this.attribLocationsByProgram_={},this.uniforms_=[],e.uniforms&&this.setUniforms(e.uniforms),this.postProcessPasses_=e.postProcesses?e.postProcesses.map(e=>new WebGLPostProcessingPass({webGlContext:this.gl_,scaleRatio:e.scaleRatio,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader,uniforms:e.uniforms})):[new WebGLPostProcessingPass({webGlContext:this.gl_})],this.shaderCompileErrors_=null,this.startTime_=Date.now()}setUniforms(e){this.uniforms_=[],this.addUniforms(e)}addUniforms(e){for(const t in e)this.uniforms_.push({name:t,value:e[t]})}canvasCacheKeyMatches(e){return this.canvasCacheKey_===getSharedCanvasCacheKey(e)}getExtension(e){if(e in this.extensionCache_)return this.extensionCache_[e];var t=this.gl_.getExtension(e);return this.extensionCache_[e]=t}bindBuffer(e){const t=this.gl_;var r,a=getUid(e);let i=this.bufferCache_[a];i||(r=t.createBuffer(),i={buffer:e,webGlBuffer:r},this.bufferCache_[a]=i),t.bindBuffer(e.getType(),i.webGlBuffer)}flushBufferData(e){const t=this.gl_;this.bindBuffer(e),t.bufferData(e.getType(),e.getArray(),e.getUsage())}deleteBuffer(e){const t=this.gl_;var e=getUid(e),r=this.bufferCache_[e];r&&!t.isContextLost()&&t.deleteBuffer(r.webGlBuffer),delete this.bufferCache_[e]}disposeInternal(){const e=this.gl_.canvas;e.removeEventListener(ContextEventType.LOST,this.boundHandleWebGLContextLost_),e.removeEventListener(ContextEventType.RESTORED,this.boundHandleWebGLContextRestored_),releaseCanvas(this.canvasCacheKey_),delete this.gl_}prepareDraw(t,e,r){const a=this.gl_,i=this.getCanvas();var s=t.size,o=t.pixelRatio;i.width===s[0]*o&&i.height===s[1]*o||(i.width=s[0]*o,i.height=s[1]*o,i.style.width=s[0]+"px",i.style.height=s[1]+"px");for(let e=this.postProcessPasses_.length-1;0<=e;e--)this.postProcessPasses_[e].init(t);a.bindTexture(a.TEXTURE_2D,null),a.clearColor(0,0,0,0),a.depthRange(0,1),a.clearDepth(1),a.clear(a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT),a.enable(a.BLEND),a.blendFunc(a.ONE,e?a.ZERO:a.ONE_MINUS_SRC_ALPHA),r?(a.enable(a.DEPTH_TEST),a.depthFunc(a.LEQUAL)):a.disable(a.DEPTH_TEST)}bindTexture(e,t,r){const a=this.gl_;a.activeTexture(a.TEXTURE0+t),a.bindTexture(a.TEXTURE_2D,e),a.uniform1i(this.getUniformLocation(r),t)}prepareDrawToRenderTarget(e,t,r,a){const i=this.gl_;var s=t.getSize();i.bindFramebuffer(i.FRAMEBUFFER,t.getFramebuffer()),i.bindRenderbuffer(i.RENDERBUFFER,t.getDepthbuffer()),i.viewport(0,0,s[0],s[1]),i.bindTexture(i.TEXTURE_2D,t.getTexture()),i.clearColor(0,0,0,0),i.depthRange(0,1),i.clearDepth(1),i.clear(i.COLOR_BUFFER_BIT|i.DEPTH_BUFFER_BIT),i.enable(i.BLEND),i.blendFunc(i.ONE,r?i.ZERO:i.ONE_MINUS_SRC_ALPHA),a?(i.enable(i.DEPTH_TEST),i.depthFunc(i.LEQUAL)):i.disable(i.DEPTH_TEST)}drawElements(e,t){const r=this.gl_;this.getExtension("OES_element_index_uint");var a=r.UNSIGNED_INT;r.drawElements(r.TRIANGLES,t-e,a,4*e)}finalizeDraw(r,a,i){for(let e=0,t=this.postProcessPasses_.length;e<t;e++)e===t-1?this.postProcessPasses_[e].apply(r,null,a,i):this.postProcessPasses_[e].apply(r,this.postProcessPasses_[e+1])}getCanvas(){return this.gl_.canvas}getGL(){return this.gl_}applyFrameState(e){var t=e.size,r=e.viewState.rotation,a=e.pixelRatio;this.setUniformFloatValue(DefaultUniform.TIME,.001*(Date.now()-this.startTime_)),this.setUniformFloatValue(DefaultUniform.ZOOM,e.viewState.zoom),this.setUniformFloatValue(DefaultUniform.RESOLUTION,e.viewState.resolution),this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO,a),this.setUniformFloatVec2(DefaultUniform.VIEWPORT_SIZE_PX,[t[0],t[1]]),this.setUniformFloatValue(DefaultUniform.ROTATION,r)}applyHitDetectionUniform(e){var t=this.getUniformLocation(DefaultUniform.HIT_DETECTION);this.getGL().uniform1i(t,e?1:0),e&&this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO,.5)}applyUniforms(r){const a=this.gl_;let i,s=0;this.uniforms_.forEach(e=>{if((i="function"==typeof e.value?e.value(r):e.value)instanceof HTMLCanvasElement||i instanceof HTMLImageElement||i instanceof ImageData||i instanceof WebGLTexture){i instanceof WebGLTexture&&!e.texture?(e.prevValue=void 0,e.texture=i):e.texture||(e.prevValue=void 0,e.texture=a.createTexture()),this.bindTexture(e.texture,s,e.name),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE);var t=!(i instanceof HTMLImageElement)||i.complete;i instanceof WebGLTexture||!t||e.prevValue===i||(e.prevValue=i,a.texImage2D(a.TEXTURE_2D,0,a.RGBA,a.RGBA,a.UNSIGNED_BYTE,i)),s++}else if(Array.isArray(i)&&6===i.length)this.setUniformMatrixValue(e.name,fromTransform(this.tmpMat4_,i));else if(Array.isArray(i)&&i.length<=4)switch(i.length){case 2:return void a.uniform2f(this.getUniformLocation(e.name),i[0],i[1]);case 3:return void a.uniform3f(this.getUniformLocation(e.name),i[0],i[1],i[2]);case 4:return void a.uniform4f(this.getUniformLocation(e.name),i[0],i[1],i[2],i[3]);default:return}else"number"==typeof i&&a.uniform1f(this.getUniformLocation(e.name),i)})}useProgram(e,t){const r=this.gl_;r.useProgram(e),this.currentProgram_=e,this.applyFrameState(t),this.applyUniforms(t)}compileShader(e,t){const r=this.gl_;t=r.createShader(t);return r.shaderSource(t,e),r.compileShader(t),t}getProgram(e,t){const r=this.gl_;var a,e=this.compileShader(e,r.FRAGMENT_SHADER),t=this.compileShader(t,r.VERTEX_SHADER),i=r.createProgram();if(r.attachShader(i,e),r.attachShader(i,t),r.linkProgram(i),!r.getShaderParameter(e,r.COMPILE_STATUS))throw a="Fragment shader compilation failed: "+r.getShaderInfoLog(e),new Error(a);if(r.deleteShader(e),!r.getShaderParameter(t,r.COMPILE_STATUS))throw a="Vertex shader compilation failed: "+r.getShaderInfoLog(t),new Error(a);if(r.deleteShader(t),r.getProgramParameter(i,r.LINK_STATUS))return i;throw e="GL program linking failed: "+r.getProgramInfoLog(i),new Error(e)}getUniformLocation(e){var t=getUid(this.currentProgram_);return void 0===this.uniformLocationsByProgram_[t]&&(this.uniformLocationsByProgram_[t]={}),void 0===this.uniformLocationsByProgram_[t][e]&&(this.uniformLocationsByProgram_[t][e]=this.gl_.getUniformLocation(this.currentProgram_,e)),this.uniformLocationsByProgram_[t][e]}getAttributeLocation(e){var t=getUid(this.currentProgram_);return void 0===this.attribLocationsByProgram_[t]&&(this.attribLocationsByProgram_[t]={}),void 0===this.attribLocationsByProgram_[t][e]&&(this.attribLocationsByProgram_[t][e]=this.gl_.getAttribLocation(this.currentProgram_,e)),this.attribLocationsByProgram_[t][e]}makeProjectionTransform(e,t){var r=e.size,a=e.viewState.rotation,i=e.viewState.resolution,e=e.viewState.center;return composeTransform(t,0,0,2/(i*r[0]),2/(i*r[1]),-a,-e[0],-e[1]),t}setUniformFloatValue(e,t){this.gl_.uniform1f(this.getUniformLocation(e),t)}setUniformFloatVec2(e,t){this.gl_.uniform2fv(this.getUniformLocation(e),t)}setUniformFloatVec4(e,t){this.gl_.uniform4fv(this.getUniformLocation(e),t)}setUniformMatrixValue(e,t){this.gl_.uniformMatrix4fv(this.getUniformLocation(e),!1,t)}enableAttributeArray_(e,t,r,a,i){e=this.getAttributeLocation(e);e<0||(this.gl_.enableVertexAttribArray(e),this.gl_.vertexAttribPointer(e,t,r,!1,a,i))}enableAttributes(t){var r=computeAttributesStride(t);let a=0;for(let e=0;e<t.length;e++){var i=t[e];this.enableAttributeArray_(i.name,i.size,i.type||FLOAT,r,a),a+=i.size*getByteSizeFromType(i.type)}}handleWebGLContextLost(e){clear(this.bufferCache_),this.currentProgram_=null,e.preventDefault()}handleWebGLContextRestored(){this.needsToBeRecreated_=!0}needsToBeRecreated(){return this.needsToBeRecreated_}createTexture(e,t,r){const a=this.gl_;r=r||a.createTexture();var i=a.RGBA,s=a.RGBA,o=a.UNSIGNED_BYTE;return a.bindTexture(a.TEXTURE_2D,r),t?a.texImage2D(a.TEXTURE_2D,0,i,s,o,t):a.texImage2D(a.TEXTURE_2D,0,i,e[0],e[1],0,s,o,null),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE),r}}function computeAttributesStride(t){let r=0;for(let e=0;e<t.length;e++){var a=t[e];r+=a.size*getByteSizeFromType(a.type)}return r}function getByteSizeFromType(e){switch(e){case AttributeType.UNSIGNED_BYTE:return Uint8Array.BYTES_PER_ELEMENT;case AttributeType.UNSIGNED_SHORT:return Uint16Array.BYTES_PER_ELEMENT;case AttributeType.UNSIGNED_INT:return Uint32Array.BYTES_PER_ELEMENT;default:AttributeType.FLOAT;return Float32Array.BYTES_PER_ELEMENT}}export default WebGLHelper;export{ShaderType,DefaultUniform,AttributeType,computeAttributesStride};