import{DEFAULT_TILE_SIZE}from"../tilegrid/common.js";import ImageTile from"../ImageTile.js";import TileGrid from"../tilegrid/TileGrid.js";import TileImage from"./TileImage.js";import TileState from"../TileState.js";import{createCanvasContext2D}from"../dom.js";import{createFromTileUrlFunctions,expandUrl}from"../tileurlfunction.js";import{getCenter}from"../extent.js";import{toSize}from"../size.js";class CustomTile extends ImageTile{constructor(e,t,i,r,o,n,l){super(t,i,r,o,n,l),this.zoomifyImage_=null,this.tileSize_=e}getImage(){if(this.zoomifyImage_)return this.zoomifyImage_;var e=super.getImage();if(this.state!=TileState.LOADED)return e;{var t=this.tileSize_;if(e.width==t[0]&&e.height==t[1])return this.zoomifyImage_=e;const i=createCanvasContext2D(t[0],t[1]);return i.drawImage(e,0,0),this.zoomifyImage_=i.canvas,i.canvas}}}class Zoomify extends TileImage{constructor(e){var t=e.size,i=void 0!==e.tierSizeCalculation?e.tierSizeCalculation:"default",r=e.tilePixelRatio||1,o=t[0],n=t[1];const a=[],l=e.tileSize||DEFAULT_TILE_SIZE;let s=l*r;switch(i){case"default":for(;o>s||n>s;)a.push([Math.ceil(o/s),Math.ceil(n/s)]),s+=s;break;case"truncated":let e=o,t=n;for(;e>s||t>s;)a.push([Math.ceil(e/s),Math.ceil(t/s)]),e>>=1,t>>=1;break;default:throw new Error("Unknown `tierSizeCalculation` configured")}a.push([1,1]),a.reverse();const c=[r],u=[0];for(let e=1,t=a.length;e<t;e++)c.push(r<<e),u.push(a[e-1][0]*a[e-1][1]+u[e-1]);c.reverse();const m=new TileGrid({tileSize:l,extent:e.extent||[0,-n,o,0],resolutions:c});let p=e.url;!p||p.includes("{TileGroup}")||p.includes("{tileIndex}")||(p+="{TileGroup}/{z}-{x}-{y}.jpg");const d=expandUrl(p);let h=l*r;const f=createFromTileUrlFunctions(d.map(function(s){return function(e,t,i){if(e){var r=e[0],o=e[1],e=e[2],n=o+e*a[r][0];const l={z:r,x:o,y:e,tileIndex:n,TileGroup:"TileGroup"+((n+u[r])/h|0)};return s.replace(/\{(\w+?)\}/g,function(e,t){return l[t]})}}}));t=CustomTile.bind(null,toSize(l*r)),super({attributions:e.attributions,cacheSize:e.cacheSize,crossOrigin:e.crossOrigin,interpolate:e.interpolate,projection:e.projection,tilePixelRatio:r,reprojectionErrorThreshold:e.reprojectionErrorThreshold,tileClass:t,tileGrid:m,tileUrlFunction:f,transition:e.transition}),this.zDirection=e.zDirection,i=m.getTileCoordForCoordAndResolution(getCenter(m.getExtent()),c[c.length-1]),t=f(i,1,null);const g=new Image;g.addEventListener("error",()=>{h=l,this.changed()}),g.src=t}}export default Zoomify;export{CustomTile};