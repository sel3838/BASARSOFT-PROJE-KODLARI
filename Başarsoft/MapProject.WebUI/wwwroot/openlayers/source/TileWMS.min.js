import TileImage from"./TileImage.js";import{DEFAULT_VERSION,getImageSrc,getRequestParams}from"./wms.js";import{appendParams}from"../uri.js";import{buffer,createEmpty}from"../extent.js";import{calculateSourceResolution}from"../reproj.js";import{compareVersions}from"../string.js";import{get as getProjection,transform}from"../proj.js";import{modulo}from"../math.js";import{hash as tileCoordHash}from"../tilecoord.js";class TileWMS extends TileImage{constructor(t){t=t||{};var e=Object.assign({},t.params),r=!("TRANSPARENT"in e)||e.TRANSPARENT;super({attributions:t.attributions,attributionsCollapsible:t.attributionsCollapsible,cacheSize:t.cacheSize,crossOrigin:t.crossOrigin,interpolate:t.interpolate,opaque:!r,projection:t.projection,reprojectionErrorThreshold:t.reprojectionErrorThreshold,tileClass:t.tileClass,tileGrid:t.tileGrid,tileLoadFunction:t.tileLoadFunction,url:t.url,urls:t.urls,wrapX:void 0===t.wrapX||t.wrapX,transition:t.transition,zDirection:t.zDirection}),this.gutter_=void 0!==t.gutter?t.gutter:0,this.params_=e,this.v13_=!0,this.serverType_=t.serverType,this.hidpi_=void 0===t.hidpi||t.hidpi,this.tmpExtent_=createEmpty(),this.updateV13_(),this.setKey(this.getKeyForParams_())}getFeatureInfoUrl(e,r,i,s){var i=getProjection(i),o=this.getProjection()||i;let a=this.getTileGrid();a=a||this.getTileGridForProjection(o);var n=transform(e,i,o),e=calculateSourceResolution(o,i,e,r),r=a.getZForResolution(e,this.zDirection),e=a.getResolution(r),r=a.getTileCoordForCoordAndZ(n,r);if(!(a.getResolutions().length<=r[0])){let t=a.getTileCoordExtent(r,this.tmpExtent_);var l=this.gutter_;0!==l&&(t=buffer(t,e*l,t));const h={QUERY_LAYERS:this.params_.LAYERS};Object.assign(h,getRequestParams(this.params_,"GetFeatureInfo"),s);l=Math.floor((n[0]-t[0])/e),s=Math.floor((t[3]-n[1])/e);return h[this.v13_?"I":"X"]=l,h[this.v13_?"J":"Y"]=s,this.getRequestUrl_(r,t,1,o||i,h)}}getLegendUrl(t,e){if(void 0!==this.urls[0]){const i={SERVICE:"WMS",VERSION:DEFAULT_VERSION,REQUEST:"GetLegendGraphic",FORMAT:"image/png"};if(void 0===e||void 0===e.LAYER){var r=this.params_.LAYERS;if(!(!Array.isArray(r)||1===r.length))return;i.LAYER=r}return void 0!==t&&(r=this.getProjection()?this.getProjection().getMetersPerUnit():1,i.SCALE=t*r/28e-5),Object.assign(i,e),appendParams(this.urls[0],i)}}getGutter(){return this.gutter_}getParams(){return this.params_}getRequestUrl_(e,r,i,s,o){var a=this.urls;if(a){let t;return t=1==a.length?a[0]:a[modulo(tileCoordHash(e),a.length)],getImageSrc(r,(this.tileGrid||this.getTileGridForProjection(s)).getResolution(e[0]),i,s,t,o,this.serverType_)}}getTilePixelRatio(t){return this.hidpi_&&void 0!==this.serverType_?t:1}getKeyForParams_(){let t=0;const e=[];for(const r in this.params_)e[t++]=r+"-"+this.params_[r];return e.join("/")}updateParams(t){Object.assign(this.params_,t),this.updateV13_(),this.setKey(this.getKeyForParams_())}updateV13_(){var t=this.params_.VERSION||DEFAULT_VERSION;this.v13_=0<=compareVersions(t,"1.3")}tileUrlFunction(e,r,i){let s=this.getTileGrid();if(!((s=s||this.getTileGridForProjection(i)).getResolutions().length<=e[0])){1==r||this.hidpi_&&void 0!==this.serverType_||(r=1);var o=s.getResolution(e[0]);let t=s.getTileCoordExtent(e,this.tmpExtent_);var a=this.gutter_,o=(0!==a&&(t=buffer(t,o*a,t)),Object.assign({},getRequestParams(this.params_,"GetMap")));return this.getRequestUrl_(e,t,r,i,o)}}}export default TileWMS;